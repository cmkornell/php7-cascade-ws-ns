<wsdl:definitions targetNamespace="http://www.hannonhill.com/ws/ns/AssetOperationService">
  <wsdl:types>
    <schema elementFormDefault="qualified" targetNamespace="http://www.hannonhill.com/ws/ns/AssetOperationService">

<element name="editAccessRights">
<complexType>
<sequence>
<element maxOccurs="1" minOccurs="1" name="authentication" nillable="false" type="impl:authentication"/>
<element maxOccurs="1" minOccurs="1" name="accessRightsInformation" nillable="false" type="impl:accessRightsInformation"/>
<element maxOccurs="1" minOccurs="0" name="applyToChildren" nillable="false" type="xsd:boolean"/>
</sequence>
</complexType>
</element>

<element name="editAccessRightsResponse">
<complexType>
<sequence>
<element name="editAccessRightsReturn" type="impl:operationResult"/>
</sequence>
</complexType>
</element>

<complexType name="editAccessRights">
<sequence>
<element maxOccurs="1" minOccurs="1" name="accessRightsInformation" nillable="true" type="impl:accessRightsInformation"/>
<!-- not required for non-folders/non-containers. default is false 
-->
<element maxOccurs="1" minOccurs="0" name="applyToChildren" nillable="false" type="xsd:boolean"/>
</sequence>
</complexType>

<element name="editPreference">
<complexType>
<sequence>
<element maxOccurs="1" minOccurs="1" name="authentication" nillable="false" type="impl:authentication"/>
<element maxOccurs="1" minOccurs="1" name="preference" nillable="false" type="impl:preference"/>
</sequence>
</complexType>
</element>

<element name="editPreferenceResponse">
<complexType>
<sequence>
<element name="editPreferenceReturn" type="impl:operationResult"/>
</sequence>
</complexType>
</element>

<complexType name="editPreferenceResult">
<sequence>
<element maxOccurs="1" minOccurs="1" name="preference" nillable="false" type="impl:preference"/>
</sequence>
</complexType>

<element name="editWorkflowSettings">
<complexType>
<sequence>
<element maxOccurs="1" minOccurs="1" name="authentication" nillable="false" type="impl:authentication"/>
<element maxOccurs="1" minOccurs="1" name="workflowSettings" nillable="false" type="impl:workflowSettings"/>
<element maxOccurs="1" minOccurs="0" name="applyInheritWorkflowsToChildren" nillable="false" type="xsd:boolean"/>
<element maxOccurs="1" minOccurs="0" name="applyRequireWorkflowToChildren" nillable="false" type="xsd:boolean"/>
</sequence>
</complexType>
</element>

<element name="editWorkflowSettingsResponse">
<complexType>
<sequence>
<element name="editWorkflowSettingsReturn" type="impl:operationResult"/>
</sequence>
</complexType>
</element>

<complexType name="editWorkflowSettings">
<sequence>
<element maxOccurs="1" minOccurs="1" name="workflowSettings" nillable="true" type="impl:workflowSettings"/>
<!-- NOT REQUIRED, default is false -->

<element maxOccurs="1" minOccurs="0" name="applyInheritWorkflowsToChildren" nillable="false" type="xsd:boolean"/>
<!-- NOT REQUIRED, default is false -->

<element maxOccurs="1" minOccurs="0" name="applyRequireWorkflowToChildren" nillable="false" type="xsd:boolean"/>
</sequence>
</complexType>

<element name="listSubscribers">
<complexType>
<sequence>
<element name="authentication" type="impl:authentication"/>
<element name="identifier" type="impl:identifier"/>
</sequence>
</complexType>
</element>

<element name="listSubscribersResponse">
<complexType>
<sequence>
<element name="listSubscribersReturn" type="impl:listSubscribersResult"/>
</sequence>
</complexType>
</element>

<complexType name="listSubscribers">
<sequence>
<element maxOccurs="1" minOccurs="1" name="identifier" nillable="false" type="impl:identifier"/>
</sequence>
</complexType>

<complexType name="listSubscribersResult">
<complexContent>
<extension base="impl:operationResult">
<sequence>
<element maxOccurs="1" minOccurs="1" name="subscribers" type="impl:assetIdentifiers"/>
</sequence>
</extension>
</complexContent>
</complexType>


<element name="listEditorConfigurations">
<complexType>
<sequence>
<element name="authentication" type="impl:authentication"/>
<element name="identifier" type="impl:identifier"/>
</sequence>
</complexType>
</element>

<element name="listEditorConfigurationsResponse">
<complexType>
<sequence>
<element name="listEditorConfigurationsReturn" type="impl:listEditorConfigurationsResult"/>
</sequence>
</complexType>
</element>

<complexType name="listEditorConfigurationsResult">
<complexContent>
<extension base="impl:operationResult">
<sequence>
<element maxOccurs="1" minOccurs="1" name="editorConfigurations" type="impl:assetIdentifiers"/>
</sequence>
</extension>
</complexContent>
</complexType>


<element name="listMessages">
<complexType>
<sequence>
<element maxOccurs="1" minOccurs="1" name="authentication" nillable="false" type="impl:authentication"/>
</sequence>
</complexType>
</element>

<element name="listMessagesResponse">
<complexType>
<sequence>
<element name="listMessagesReturn" type="impl:listMessagesResult"/>
</sequence>
</complexType>
</element>

<complexType name="listMessagesResult">
<complexContent>
<extension base="impl:operationResult">
<sequence>
<element maxOccurs="1" minOccurs="0" name="messages" nillable="true" type="impl:messagesList"/>
</sequence>
</extension>
</complexContent>
</complexType>


<element name="listSites">
<complexType>
<sequence>
<element maxOccurs="1" minOccurs="1" name="authentication" nillable="false" type="impl:authentication"/>
</sequence>
</complexType>
</element>

<element name="listSitesResponse">
<complexType>
<sequence>
<element name="listSitesReturn" type="impl:listSitesResult"/>
</sequence>
</complexType>
</element>

<complexType name="listSitesResult">
<complexContent>
<extension base="impl:operationResult">
<sequence>
<element maxOccurs="1" minOccurs="1" name="sites" type="impl:assetIdentifiers"/>
</sequence>
</extension>
</complexContent>
</complexType>



<element name="markMessage">
<complexType>
<sequence>
<element maxOccurs="1" minOccurs="1" name="authentication" nillable="false" type="impl:authentication"/>
<element maxOccurs="1" minOccurs="1" name="identifier" nillable="false" type="impl:identifier"/>
<element maxOccurs="1" minOccurs="1" name="markType" nillable="false" type="impl:message-mark-type"/>
</sequence>
</complexType>
</element>

<element name="markMessageResponse">
<complexType>
<sequence>
<element name="markMessageReturn" type="impl:operationResult"/>
</sequence>
</complexType>
</element>

<element name="performWorkflowTransition">
<complexType>
<sequence>
<element maxOccurs="1" minOccurs="1" name="authentication" nillable="false" type="impl:authentication"/>
<element maxOccurs="1" minOccurs="1" name="workflowTransitionInformation" nillable="false" type="impl:workflowTransitionInformation"/>
</sequence>
</complexType>
</element>

<element name="performWorkflowTransitionResponse">
<complexType>
<sequence>
<element name="performWorkflowTransitionReturn" type="impl:operationResult"/>
</sequence>
</complexType>
</element>


<element name="readAccessRights">
<complexType>
<sequence>
<element name="authentication" type="impl:authentication"/>
<element name="identifier" type="impl:identifier"/>
</sequence>
</complexType>
</element>

<element name="readAccessRightsResponse">
<complexType>
<sequence>
<element name="readAccessRightsReturn" type="impl:readAccessRightsResult"/>
</sequence>
</complexType>
</element>

<complexType name="readAccessRights">
<sequence>
<element maxOccurs="1" minOccurs="1" name="identifier" nillable="false" type="impl:identifier"/>
</sequence>
</complexType>

<complexType name="readAccessRightsResult">
<complexContent>
<extension base="impl:operationResult">
<sequence>
<element maxOccurs="1" minOccurs="1" name="accessRightsInformation" nillable="false" type="impl:accessRightsInformation"/>
</sequence>
</extension>
</complexContent>
</complexType>



<element name="readAudits">
<complexType>
<sequence>
<element maxOccurs="1" minOccurs="1" name="authentication" nillable="false" type="impl:authentication"/>
<element maxOccurs="1" minOccurs="1" name="auditParameters" nillable="false" type="impl:auditParameters"/>
</sequence>
</complexType>
</element>

<element name="readAuditsResponse">
<complexType>
<sequence>
<element name="readAuditsReturn" type="impl:readAuditsResult"/>
</sequence>
</complexType>
</element>

<element name="readPreferences">
<complexType>
<sequence>
<element maxOccurs="1" minOccurs="1" name="authentication" nillable="false" type="impl:authentication"/>
</sequence>
</complexType>
</element>

<element name="readPreferencesResponse">
<complexType>
<sequence>
<element name="readPreferencesReturn" type="impl:readPreferencesResult"/>
</sequence>
</complexType>
</element>

<complexType name="readPreferencesResult">
<complexContent>
<extension base="impl:operationResult">
<sequence>
<element maxOccurs="1" minOccurs="1" name="preferences" nillable="true" type="impl:preferencesList"/>
</sequence>
</extension>
</complexContent>
</complexType>

<element name="readWorkflowInformation">
<complexType>
<sequence>
<element maxOccurs="1" minOccurs="1" name="authentication" nillable="false" type="impl:authentication"/>
<element maxOccurs="1" minOccurs="1" name="identifier" nillable="false" type="impl:identifier"/>
</sequence>
</complexType>
</element>

<element name="readWorkflowInformationResponse">
<complexType>
<sequence>
<element name="readWorkflowInformationReturn" type="impl:readWorkflowInformationResult"/>
</sequence>
</complexType>
</element>

<complexType name="readWorkflowInformationResult">
<complexContent>
<extension base="impl:operationResult">
<sequence>
<element maxOccurs="1" minOccurs="0" name="workflow" type="impl:workflow"/>
</sequence>
</extension>
</complexContent>
</complexType>

<element name="readWorkflowSettings">
<complexType>
<sequence>
<element name="authentication" type="impl:authentication"/>
<element name="identifier" type="impl:identifier"/>
</sequence>
</complexType>
</element>

<element name="readWorkflowSettingsResponse">
<complexType>
<sequence>
<element name="readWorkflowSettingsReturn" type="impl:readWorkflowSettingsResult"/>
</sequence>
</complexType>
</element>

<complexType name="readWorkflowSettings">
<sequence>
<element maxOccurs="1" minOccurs="1" name="identifier" nillable="false" type="impl:identifier"/>
</sequence>
</complexType>

<complexType name="readWorkflowSettingsResult">
<complexContent>
<extension base="impl:operationResult">
<sequence>
<element maxOccurs="1" minOccurs="1" name="workflowSettings" nillable="false" type="impl:workflowSettings"/>
</sequence>
</extension>
</complexContent>
</complexType>


<element name="sendMessage">
<complexType>
<sequence>
<element maxOccurs="1" minOccurs="1" name="authentication" nillable="false" type="impl:authentication"/>
<element maxOccurs="1" minOccurs="1" name="message" nillable="false" type="impl:message"/>
</sequence>
</complexType>
</element>

<element name="sendMessageResponse">
<complexType>
<sequence>
<element name="sendMessageReturn" type="impl:operationResult"/>
</sequence>
</complexType>
</element>

<element name="siteCopy">
<complexType>
<sequence>
<element maxOccurs="1" minOccurs="1" name="authentication" nillable="false" type="impl:authentication"/>
<!-- ONE REQUIRED: The id or name of the site that needs to be copied. If both id and name is provided, id will be used. 
-->
<element maxOccurs="1" minOccurs="0" name="originalSiteId" type="xsd:string"/>
<element maxOccurs="1" minOccurs="0" name="originalSiteName" type="xsd:string"/>
<!-- REQUIRED: The name of the new site -->

<element maxOccurs="1" minOccurs="1" name="newSiteName" nillable="false" type="xsd:string"/>
</sequence>
</complexType>
</element>

<element name="siteCopyResponse">
<complexType>
<sequence>
<element name="siteCopyReturn" type="impl:operationResult"/>
</sequence>
</complexType>
</element>

<complexType name="siteCopy">
<sequence>
<!-- ONE REQUIRED: The id or name of the site that needs to be copied. If both id and name is provided, id will be used. 
-->
<element maxOccurs="1" minOccurs="0" name="originalSiteId" type="xsd:string"/>
<element maxOccurs="1" minOccurs="0" name="originalSiteName" type="xsd:string"/>
<!-- REQUIRED: The name of the new site -->

<element maxOccurs="1" minOccurs="1" name="newSiteName" nillable="false" type="xsd:string"/>
</sequence>
</complexType>











<complexType name="authentication">
<sequence>
<element name="password" nillable="false" type="xsd:string"/>
<element name="username" nillable="false" type="xsd:string"/>
</sequence>
</complexType>

<complexType name="identifier">
<sequence>
<!-- When editing and selected asset is recycled, it is recommended to preserve this relationship by providing selected asset's id
					 in case if the selected asset gets restored from the recycle bin.
					 One is REQUIRED 
-->
<element maxOccurs="1" minOccurs="0" name="id" type="xsd:string"/>
<!-- Path works only for non-recycled assets -->

<element maxOccurs="1" minOccurs="0" name="path" type="impl:path"/>
<element maxOccurs="1" minOccurs="1" name="type" type="impl:entityTypeString"/>
<!-- NOT REQUIRED: For reading purposes only. Ignored when editing, copying etc. 
-->
<element maxOccurs="1" minOccurs="0" name="recycled" type="xsd:boolean"/>
</sequence>
</complexType>

<complexType name="path">
<sequence>
<!--  When reading a site, the "path" element should be populated with the
					site's name 
-->
<element maxOccurs="1" name="path" type="xsd:string"/>
<!-- NOT REQUIRED -->

<element maxOccurs="1" minOccurs="0" name="siteId" nillable="true" type="xsd:string"/>
<element maxOccurs="1" minOccurs="0" name="siteName" nillable="true" type="xsd:string"/>
</sequence>
</complexType>

<complexType name="user-group-identifier">
<sequence>
<!-- the username or group name -->

<element maxOccurs="1" minOccurs="1" name="name" type="xsd:string"/>
<!-- the type: "user" or "group" -->

<element maxOccurs="1" minOccurs="1" name="type" type="impl:entityTypeString"/>
</sequence>
</complexType>

<complexType name="message">
<complexContent>
<extension base="impl:base-asset">
<sequence>
<!-- Who the message was/will be sent to. -->

<element maxOccurs="1" minOccurs="1" name="to" nillable="false" type="xsd:string"/>
<!-- Who sent the message - not necessary when sending a message 
-->
<element maxOccurs="1" minOccurs="0" name="from" nillable="false" type="xsd:string"/>
<!-- The subject - required -->

<element maxOccurs="1" minOccurs="1" name="subject" nillable="false" type="xsd:string"/>
<!-- The date the message was sent - not necessary when sending a message 
-->
<element maxOccurs="1" minOccurs="0" name="date" nillable="false" type="xsd:dateTime"/>
<!-- The body of the message -->

<element maxOccurs="1" minOccurs="1" name="body" nillable="false" type="xsd:string"/>
</sequence>
</extension>
</complexContent>
</complexType>

<simpleType name="message-mark-type">
<restriction base="xsd:string">
<enumeration value="read"/>
<enumeration value="unread"/>
</restriction>
</simpleType>







<complexType name="auditParameters">
<sequence>
<!-- Filter the assets by a certain entity
					 NOT REQUIRED 
-->
<element maxOccurs="1" minOccurs="0" name="identifier" type="impl:identifier"/>
<!-- Filter the audits by a given user name
					 NOT REQUIRED 
-->
<element maxOccurs="1" minOccurs="0" name="username" type="xsd:string"/>
<!-- Filter the audits by a given group name. The audits
					 for all users in the group will be returned
					 NOT REQUIRED 
-->
<element maxOccurs="1" minOccurs="0" name="groupname" type="xsd:string"/>
<!-- Filter the audits by a given role.
					 NOT REQUIRED 
-->
<element maxOccurs="1" minOccurs="0" name="rolename" type="xsd:string"/>
<!-- Filter the audits by a start time. Only audits for
					 events that happened after this time will be included.
					 NOT REQUIRED 
-->
<element maxOccurs="1" minOccurs="0" name="startDate" type="xsd:dateTime"/>
<!-- Filter the audits by an end time. Only audits for
					 events that happened before this time will be included.
					 NOT REQUIRED 
-->
<element maxOccurs="1" minOccurs="0" name="endDate" type="xsd:dateTime"/>
<!-- Filter the audits by an audit type. Only audits of this
					 type will be returned in the response
					 NOT REQUIRED 
-->
<element maxOccurs="1" minOccurs="0" name="auditType" type="impl:auditTypes"/>
</sequence>
</complexType>

<simpleType name="auditTypes">
<restriction base="xsd:string">
<enumeration value="login"/>
<enumeration value="login_failed"/>
<enumeration value="logout"/>
<enumeration value="start_workflow"/>
<enumeration value="advance_workflow"/>
<enumeration value="edit"/>
<enumeration value="copy"/>
<enumeration value="create"/>
<enumeration value="reference"/>
<enumeration value="delete"/>
<enumeration value="delete_unpublish"/>
<enumeration value="check_in"/>
<enumeration value="check_out"/>
<enumeration value="activate_version"/>
<enumeration value="publish"/>
<enumeration value="unpublish"/>
<enumeration value="recycle"/>
<enumeration value="restore"/>
<enumeration value="move"/>
</restriction>
</simpleType>

<complexType name="readAuditsResult">
<complexContent>
<extension base="impl:operationResult">
<sequence>
<element maxOccurs="1" minOccurs="1" name="audits" type="impl:audits"/>
</sequence>
</extension>
</complexContent>
</complexType>

<complexType name="audits">
<sequence>
<element maxOccurs="unbounded" minOccurs="0" name="audit" type="impl:audit"/>
</sequence>
</complexType>

<complexType name="audit">
<sequence>
<!-- The user that performed the audited action -->

<element maxOccurs="1" minOccurs="1" name="user" type="xsd:string"/>
<!-- The type of action the user performed -->

<element maxOccurs="1" minOccurs="1" name="action" type="impl:auditTypes"/>
<!-- The identifier identifying the asset the action was performed on, if any 
-->
<element maxOccurs="1" minOccurs="0" name="identifier" type="impl:identifier"/>
<!-- The date and time the action was performed -->

<element maxOccurs="1" minOccurs="1" name="date" type="xsd:dateTime"/>
</sequence>
</complexType>


<complexType name="workflowTransitionInformation">
<sequence>
<!-- REQUIRED: The id of the workflow to perform the transition on 
-->
<element maxOccurs="1" minOccurs="1" name="workflowId" type="xsd:string"/>
<!-- REQUIRED: The identifier of the action to transition to 
-->
<element maxOccurs="1" minOccurs="1" name="actionIdentifier" type="xsd:string"/>
<!-- NOT REQUIRED: The user's comment about the transition taken 
-->
<element maxOccurs="1" minOccurs="0" name="transitionComment" nillable="true" type="xsd:string"/>
</sequence>
</complexType>

<simpleType name="entityTypeString">
<restriction base="xsd:string">
<enumeration value="assetfactory"/>
<enumeration value="assetfactorycontainer"/>
<enumeration value="block"/>
<enumeration value="block_FEED"/>
<enumeration value="block_INDEX"/>
<enumeration value="block_TEXT"/>
<enumeration value="block_XHTML_DATADEFINITION"/>
<enumeration value="block_XML"/>
<enumeration value="block_TWITTER_FEED"/>
<enumeration value="connectorcontainer"/>
<enumeration value="twitterconnector"/>
<enumeration value="facebookconnector"/>
<enumeration value="wordpressconnector"/>
<enumeration value="googleanalyticsconnector"/>
<enumeration value="contenttype"/>
<enumeration value="contenttypecontainer"/>
<enumeration value="destination"/>
<enumeration value="editorconfiguration"/>
<enumeration value="file"/>
<enumeration value="folder"/>
<enumeration value="group"/>
<enumeration value="message"/>
<enumeration value="metadataset"/>
<enumeration value="metadatasetcontainer"/>
<enumeration value="page"/>
<enumeration value="pageconfigurationset"/>
<enumeration value="pageconfiguration"/>
<enumeration value="pageregion"/>
<enumeration value="pageconfigurationsetcontainer"/>
<enumeration value="publishset"/>
<enumeration value="publishsetcontainer"/>
<enumeration value="reference"/>
<enumeration value="role"/>
<enumeration value="datadefinition"/>
<enumeration value="datadefinitioncontainer"/>
<enumeration value="format"/>
<enumeration value="format_XSLT"/>
<enumeration value="format_SCRIPT"/>
<enumeration value="site"/>
<enumeration value="sitedestinationcontainer"/>
<enumeration value="symlink"/>
<enumeration value="target"/>
<enumeration value="template"/>
<enumeration value="transport"/>
<enumeration value="transport_fs"/>
<enumeration value="transport_ftp"/>
<enumeration value="transport_db"/>
<enumeration value="transportcontainer"/>
<enumeration value="user"/>
<enumeration value="workflow"/>
<enumeration value="workflowdefinition"/>
<enumeration value="workflowdefinitioncontainer"/>
</restriction>
</simpleType>







<complexType name="accessRightsInformation">
<sequence>
<element maxOccurs="1" minOccurs="1" name="identifier" nillable="false" type="impl:identifier"/>
<element maxOccurs="1" minOccurs="0" name="aclEntries" nillable="false" type="impl:acl-entries"/>
<element maxOccurs="1" minOccurs="1" name="allLevel" nillable="false" type="impl:all-level"/>
</sequence>
</complexType>


<complexType name="acl-entries">
<sequence>
<element maxOccurs="unbounded" minOccurs="0" name="aclEntry" nillable="false" type="impl:aclEntry"/>
</sequence>
</complexType>



<complexType name="aclEntry">
<sequence>
<!-- the level, "read" or "write" -->

<element maxOccurs="1" minOccurs="1" name="level" nillable="false" type="impl:acl-entry-level"/>
<!-- the type of acl entry, "user" or "group" -->

<element maxOccurs="1" minOccurs="1" name="type" nillable="false" type="impl:acl-entry-type"/>
<!-- the name of the user or group -->

<element maxOccurs="1" minOccurs="1" name="name" nillable="false" type="xsd:string"/>
</sequence>
</complexType>

<simpleType name="all-level">
<restriction base="xsd:string">
<enumeration value="none"/>
<enumeration value="read"/>
<enumeration value="write"/>
</restriction>
</simpleType>

<simpleType name="acl-entry-level">
<restriction base="xsd:string">
<enumeration value="read"/>
<enumeration value="write"/>
</restriction>
</simpleType>

<simpleType name="acl-entry-type">
<restriction base="xsd:string">
<enumeration value="user"/>
<enumeration value="group"/>
</restriction>
</simpleType>



<complexType name="workflowSettings">
<sequence>
<element maxOccurs="1" minOccurs="1" name="identifier" nillable="false" type="impl:identifier"/>
<element maxOccurs="1" minOccurs="0" name="workflowDefinitions" nillable="false" type="impl:assetIdentifiers"/>
<element maxOccurs="1" minOccurs="0" name="inheritWorkflows" nillable="false" type="xsd:boolean"/>
<element maxOccurs="1" minOccurs="0" name="requireWorkflow" nillable="false" type="xsd:boolean"/>
<!-- Ignored on edit -->

<element maxOccurs="1" minOccurs="0" name="inheritedWorkflowDefinitions" nillable="false" type="impl:assetIdentifiers"/>
</sequence>
</complexType>


<complexType name="assetIdentifiers">
<sequence>
<element maxOccurs="unbounded" minOccurs="0" name="assetIdentifier" nillable="false" type="impl:identifier"/>
</sequence>
</complexType>

<complexType name="messagesList">
<sequence>
<element maxOccurs="unbounded" minOccurs="0" name="message" nillable="false" type="impl:message"/>
</sequence>
</complexType>

<complexType name="preferencesList">
<sequence>
<element maxOccurs="unbounded" minOccurs="0" name="preference" nillable="false" type="impl:preference"/>
</sequence>
</complexType>


<complexType name="workflow">
<complexContent>
<extension base="impl:named-asset">
<sequence>
<!-- The asset that is in this workflow -->

<element maxOccurs="1" minOccurs="1" name="relatedEntity" type="impl:identifier"/>
<!-- The current step this workflow is at -->

<element maxOccurs="1" minOccurs="1" name="currentStep" type="xsd:string"/>
<!-- The ordered steps of this workflow -->

<element maxOccurs="1" minOccurs="0" name="orderedSteps" type="impl:workflowSteps"/>
<!-- The unordered steps of this workflow -->

<element maxOccurs="1" minOccurs="0" name="unorderedSteps" type="impl:workflowSteps"/>
<!-- The date when the workflow was initialized -->

<element maxOccurs="1" minOccurs="0" name="startDate" nillable="true" type="xsd:dateTime"/>
<!--  The due date of the workflow -->

<element maxOccurs="1" minOccurs="0" name="endDate" nillable="true" type="xsd:dateTime"/>
</sequence>
</extension>
</complexContent>
</complexType>


<complexType name="workflowSteps">
<sequence>
<element maxOccurs="unbounded" minOccurs="0" name="step" type="impl:workflowStep"/>
</sequence>
</complexType>


<complexType name="workflowStep">
<sequence>
<!-- The unique name of this step -->

<element maxOccurs="1" minOccurs="1" name="identifier" type="xsd:string"/>
<!-- The display label for this step -->

<element maxOccurs="1" minOccurs="1" name="label" type="xsd:string"/>
<!-- The type of step ("system", "edit", or "transition" 
-->
<element maxOccurs="1" minOccurs="1" name="stepType" type="xsd:string"/>
<!-- The owner (user or group name) of this step -->

<element maxOccurs="1" minOccurs="1" name="owner" type="xsd:string"/>
<!-- The actions this step contains -->

<element maxOccurs="1" minOccurs="0" name="actions" type="impl:workflowActions"/>
</sequence>
</complexType>


<complexType name="workflowActions">
<sequence>
<element maxOccurs="unbounded" minOccurs="1" name="action" type="impl:workflowAction"/>
</sequence>
</complexType>


<complexType name="workflowAction">
<sequence>
<!-- The unique name of this action -->

<element maxOccurs="1" minOccurs="1" name="identifier" type="xsd:string"/>
<!-- The display label for this action -->

<element maxOccurs="1" minOccurs="1" name="label" type="xsd:string"/>
<!-- the type of action: reverse, forward, next-id -->

<element maxOccurs="1" minOccurs="1" name="actionType" type="xsd:string"/>
<!-- The id of the step that will result when this action is chosen by the user 
-->
<element maxOccurs="1" minOccurs="1" name="nextId" type="xsd:string"/>
</sequence>
</complexType>



<complexType name="base-asset">
<sequence>
<element maxOccurs="1" minOccurs="0" name="id" type="xsd:string"/>
</sequence>
</complexType>

<complexType name="named-asset">
<complexContent>
<extension base="impl:base-asset">
<sequence>
<!-- The name of the asset
							 REQUIRED on create, ignored on edit.  User move operation to rename an asset.
-->
<element maxOccurs="1" minOccurs="1" name="name" type="xsd:string"/>
</sequence>
</extension>
</complexContent>
</complexType>


<complexType name="folder-contained-asset">
<complexContent>
<extension base="impl:named-asset">
<sequence>
<!-- The parent folder relationship. REQUIRED on create, ignored on edit.  Use move
							operation to change parent folder after an asset has been created
							Priority: parentFolderId >
 parentFolderPath
							One is REQUIRED 
-->
<element maxOccurs="1" minOccurs="0" name="parentFolderId" type="xsd:string"/>
<element maxOccurs="1" minOccurs="0" name="parentFolderPath" type="xsd:string"/>
<!-- The path of an asset. This is the other way (in addition to the id)
							 to uniquely identify an asset. When creating this will be left blank.
							 When editing, specify this to uniquely identify an asset. 
-->
<element maxOccurs="1" minOccurs="0" name="path" type="xsd:string"/>
<!-- When this asset was last modified. Read only.
							 NOT REQUIRED 
-->
<element maxOccurs="1" minOccurs="0" name="lastModifiedDate" nillable="true" type="xsd:dateTime"/>
<!-- Who last modified this asset. Read only.
							 NOT REQUIRED 
-->
<element maxOccurs="1" minOccurs="0" name="lastModifiedBy" nillable="true" type="xsd:string"/>
<!-- When this asset was created. Read only.
							NOT REQUIRED 
-->
<element maxOccurs="1" minOccurs="0" name="createdDate" nillable="true" type="xsd:dateTime"/>
<!-- Who created this asset. Read only.
							NOT REQUIRED 
-->
<element maxOccurs="1" minOccurs="0" name="createdBy" nillable="true" type="xsd:string"/>
<!-- The Site in which the asset is located
							 One is REQUIRED 
-->
<element maxOccurs="1" minOccurs="0" name="siteId" nillable="true" type="xsd:string"/>
<element maxOccurs="1" minOccurs="0" name="siteName" nillable="true" type="xsd:string"/>
</sequence>
</extension>
</complexContent>
</complexType>

<complexType name="reference">
<complexContent>
<extension base="impl:folder-contained-asset">
<sequence>
<!-- For defining the referenced asset relationship
							 Priority: referencedAssetId >
 referencedAssetPath
							 One is REQUIRED 
-->
<element maxOccurs="1" minOccurs="0" name="referencedAssetId" type="xsd:string"/>
<element maxOccurs="1" minOccurs="0" name="referencedAssetPath" type="xsd:string"/>
<!-- The type of the referenced asset
							 REQUIRED 
-->
<element maxOccurs="1" minOccurs="1" name="referencedAssetType" type="impl:entityTypeString"/>
</sequence>
</extension>
</complexContent>
</complexType>

<complexType name="xsltFormat">
<complexContent>
<extension base="impl:folder-contained-asset">
<sequence>
<!-- The XML content of the xslt format
							 REQUIRED 
-->
<element maxOccurs="1" minOccurs="1" name="xml" type="xsd:string"/>
</sequence>
</extension>
</complexContent>
</complexType>

<complexType name="scriptFormat">
<complexContent>
<extension base="impl:folder-contained-asset">
<sequence>
<!-- The script content of the scriptFormat
							 REQUIRED 
-->
<element maxOccurs="1" minOccurs="1" name="script" type="xsd:string"/>
</sequence>
</extension>
</complexContent>
</complexType>

<complexType name="template">
<complexContent>
<extension base="impl:folder-contained-asset">
<sequence>

<element maxOccurs="1" minOccurs="0" name="targetId" type="xsd:string"/>
<element maxOccurs="1" minOccurs="0" name="targetPath" type="xsd:string"/>
<!-- The overall xslt format (and ONLY xslt) applied to this template
							 NOT REQUIRED default none 
-->
<!-- When editing and selected asset is recycled, it is recommended to preserve this relationship by providing selected asset's id
					 		 in case if the selected asset gets restored from the recycle bin. 
-->
<element maxOccurs="1" minOccurs="0" name="formatId" nillable="true" type="xsd:string"/>
<!-- Path works only for non-recycled assets -->

<element maxOccurs="1" minOccurs="0" name="formatPath" nillable="true" type="xsd:string"/>
<!-- NOT REQUIRED: For reading purposes only. Ignored when editing, copying etc. 
-->
<element maxOccurs="1" minOccurs="0" name="formatRecycled" nillable="true" type="xsd:boolean"/>
<!-- The XHTML content of the template -->

<element maxOccurs="1" name="xml" type="xsd:string"/>
<!-- The page regions and their block/xslt format assignments for this template
							 NOT REQUIRED default: all regions empty 
-->
<element maxOccurs="1" minOccurs="0" name="pageRegions" type="impl:page-regions"/>
</sequence>
</extension>
</complexContent>
</complexType>


<complexType name="containered-asset">
<complexContent>
<extension base="impl:named-asset">
<sequence>
<!-- For defining the container relationship
							 Priority: parentContainerId >
 parentContainerPath
							 One is REQUIRED on create, ignored on edit.  Use move operation to move an asset after it has been created 
-->
<element maxOccurs="1" minOccurs="0" name="parentContainerId" type="xsd:string"/>
<element maxOccurs="1" minOccurs="0" name="parentContainerPath" type="xsd:string"/>
<!-- The path of an asset. This is the other way (in addition to the id)
							 to uniquely identify an asset. When creating this will be left blank.
							 When editing, specify this to uniquely identify an asset. 
-->
<element maxOccurs="1" minOccurs="0" name="path" type="xsd:string"/>
<!-- The site in which the asset is located
							 Priority: siteId >
 siteName
							 One is REQUIRED 
-->
<element maxOccurs="1" minOccurs="0" name="siteId" nillable="true" type="xsd:string"/>
<element maxOccurs="1" minOccurs="0" name="siteName" nillable="true" type="xsd:string"/>
</sequence>
</extension>
</complexContent>
</complexType>


<complexType name="role">
<complexContent>
<extension base="impl:named-asset">
<sequence>
<!-- The type of the role
				        	 NOT REQUIRED -->

<element maxOccurs="1" minOccurs="1" name="roleType" type="impl:role-types"/>
<!-- The global or site abilities for the role - use correct one depending on the type of the role
				        	 REQUIRED 
-->
<choice>
<element maxOccurs="1" minOccurs="1" name="globalAbilities" type="impl:global-abilities"/>
<element maxOccurs="1" minOccurs="1" name="siteAbilities" type="impl:site-abilities"/>
</choice>
</sequence>
</extension>
</complexContent>
</complexType>


<simpleType name="role-types">
<restriction base="xsd:string">
<enumeration value="site"/>
<enumeration value="global"/>
</restriction>
</simpleType>


<complexType name="global-abilities">
<sequence>
<!-- NOT REQUIRED - default false -->

<element maxOccurs="1" minOccurs="0" name="bypassAllPermissionsChecks" type="xsd:boolean"/>
<!-- NOT REQUIRED - default false -->

<element maxOccurs="1" minOccurs="0" name="accessSiteManagement" type="xsd:boolean"/>
<!-- NOT REQUIRED - default false -->

<element maxOccurs="1" minOccurs="0" name="createSites" type="xsd:boolean"/>
<!-- NOT REQUIRED - default false -->

<element maxOccurs="1" minOccurs="0" name="editAccessRights" type="xsd:boolean"/>
<!-- NOT REQUIRED - default false -->

<element maxOccurs="1" minOccurs="0" name="accessAudits" type="xsd:boolean"/>
<!-- NOT REQUIRED - default false -->

<element maxOccurs="1" minOccurs="0" name="accessAllSites" type="xsd:boolean"/>
<!-- NOT REQUIRED - default false -->

<element maxOccurs="1" minOccurs="0" name="viewSystemInfoAndLogs" type="xsd:boolean"/>
<!-- NOT REQUIRED - default false -->

<element maxOccurs="1" minOccurs="0" name="forceLogout" type="xsd:boolean"/>
<!-- NOT REQUIRED - default false -->

<element maxOccurs="1" minOccurs="0" name="diagnosticTests" type="xsd:boolean"/>
<!-- NOT REQUIRED - default false -->

<element maxOccurs="1" minOccurs="0" name="accessSecurityArea" type="xsd:boolean"/>
<!-- NOT REQUIRED - default false -->

<element maxOccurs="1" minOccurs="0" name="optimizeDatabase" type="xsd:boolean"/>
<!-- NOT REQUIRED - default false -->

<element maxOccurs="1" minOccurs="0" name="syncLdap" type="xsd:boolean"/>
<!-- NOT REQUIRED - default false -->

<element maxOccurs="1" minOccurs="0" name="configureLogging" type="xsd:boolean"/>
<!-- NOT REQUIRED - default false -->

<element maxOccurs="1" minOccurs="0" name="searchingIndexing" type="xsd:boolean"/>
<!-- NOT REQUIRED - default false -->

<element maxOccurs="1" minOccurs="0" name="accessConfiguration" type="xsd:boolean"/>
<!-- NOT REQUIRED - default false -->

<element maxOccurs="1" minOccurs="0" name="editSystemPreferences" type="xsd:boolean"/>
<!-- NOT REQUIRED - default false -->

<element maxOccurs="1" minOccurs="0" name="broadcastMessages" type="xsd:boolean"/>
<!-- NOT REQUIRED - default false -->

<element maxOccurs="1" minOccurs="0" name="viewUsersInMemberGroups" type="xsd:boolean"/>
<!-- NOT REQUIRED - default false -->

<element maxOccurs="1" minOccurs="0" name="viewAllUsers" type="xsd:boolean"/>
<!-- NOT REQUIRED - default false -->

<element maxOccurs="1" minOccurs="0" name="createUsers" type="xsd:boolean"/>
<!-- NOT REQUIRED - default false -->

<element maxOccurs="1" minOccurs="0" name="deleteUsersInMemberGroups" type="xsd:boolean"/>
<!-- NOT REQUIRED - default false -->

<element maxOccurs="1" minOccurs="0" name="deleteAllUsers" type="xsd:boolean"/>
<!-- NOT REQUIRED - default false -->

<element maxOccurs="1" minOccurs="0" name="viewMemberGroups" type="xsd:boolean"/>
<!-- NOT REQUIRED - default false -->

<element maxOccurs="1" minOccurs="0" name="viewAllGroups" type="xsd:boolean"/>
<!-- NOT REQUIRED - default false -->

<element maxOccurs="1" minOccurs="0" name="createGroups" type="xsd:boolean"/>
<!-- NOT REQUIRED - default false -->

<element maxOccurs="1" minOccurs="0" name="deleteMemberGroups" type="xsd:boolean"/>
<!-- NOT REQUIRED - default false -->

<element maxOccurs="1" minOccurs="0" name="accessRoles" type="xsd:boolean"/>
<!-- NOT REQUIRED - default false -->

<element maxOccurs="1" minOccurs="0" name="createRoles" type="xsd:boolean"/>
<!-- NOT REQUIRED - default false -->

<element maxOccurs="1" minOccurs="0" name="deleteAnyGroup" type="xsd:boolean"/>
<!-- NOT REQUIRED - default false -->

<element maxOccurs="1" minOccurs="0" name="editAnyUser" type="xsd:boolean"/>
<!-- NOT REQUIRED - default false -->

<element maxOccurs="1" minOccurs="0" name="editUsersInMemberGroups" type="xsd:boolean"/>
<!-- NOT REQUIRED - default false -->

<element maxOccurs="1" minOccurs="0" name="editAnyGroup" type="xsd:boolean"/>
<!-- NOT REQUIRED - default false -->

<element maxOccurs="1" minOccurs="0" name="editMemberGroups" type="xsd:boolean"/>
<!-- NOT REQUIRED - default false -->

<element maxOccurs="1" minOccurs="0" name="databaseExportTool" type="xsd:boolean"/>
<!-- NOT REQUIRED - default false -->

<element maxOccurs="1" minOccurs="0" name="changeIdentity" type="xsd:boolean"/>
<!-- NOT REQUIRED - default false -->

<element maxOccurs="1" minOccurs="0" name="accessDefaultEditorConfiguration" type="xsd:boolean"/>
</sequence>
</complexType>


<complexType name="site-abilities">
<sequence>
<!-- NOT REQUIRED - default false -->

<element maxOccurs="1" minOccurs="0" name="bypassAllPermissionsChecks" type="xsd:boolean"/>
<!-- NOT REQUIRED - default false -->

<element maxOccurs="1" minOccurs="0" name="uploadImagesFromWysiwyg" type="xsd:boolean"/>
<!-- NOT REQUIRED - default false -->

<element maxOccurs="1" minOccurs="0" name="multiSelectCopy" type="xsd:boolean"/>
<!-- NOT REQUIRED - default false -->

<element maxOccurs="1" minOccurs="0" name="multiSelectPublish" type="xsd:boolean"/>
<!-- NOT REQUIRED - default false -->

<element maxOccurs="1" minOccurs="0" name="multiSelectMove" type="xsd:boolean"/>
<!-- NOT REQUIRED - default false -->

<element maxOccurs="1" minOccurs="0" name="multiSelectDelete" type="xsd:boolean"/>
<!-- NOT REQUIRED - default false -->

<element maxOccurs="1" minOccurs="0" name="editPageLevelConfigurations" type="xsd:boolean"/>
<!-- NOT REQUIRED - default false -->

<element maxOccurs="1" minOccurs="0" name="editPageContentType" type="xsd:boolean"/>
<!-- NOT REQUIRED - default false -->

<element maxOccurs="1" minOccurs="0" name="editDataDefinition" type="xsd:boolean"/>
<!-- NOT REQUIRED - default false -->

<element maxOccurs="1" minOccurs="0" name="publishReadableHomeAssets" type="xsd:boolean"/>
<!-- NOT REQUIRED - default false -->

<element maxOccurs="1" minOccurs="0" name="publishWritableHomeAssets" type="xsd:boolean"/>
<!-- NOT REQUIRED - default false -->

<element maxOccurs="1" minOccurs="0" name="editAccessRights" type="xsd:boolean"/>
<!-- NOT REQUIRED - default false -->

<element maxOccurs="1" minOccurs="0" name="viewVersions" type="xsd:boolean"/>
<!-- NOT REQUIRED - default false -->

<element maxOccurs="1" minOccurs="0" name="activateDeleteVersions" type="xsd:boolean"/>
<!-- NOT REQUIRED - default false -->

<element maxOccurs="1" minOccurs="0" name="accessAudits" type="xsd:boolean"/>
<!-- NOT REQUIRED - default false -->

<element maxOccurs="1" minOccurs="0" name="bypassWorkflow" type="xsd:boolean"/>
<!-- NOT REQUIRED - default false -->

<element maxOccurs="1" minOccurs="0" name="assignApproveWorkflowSteps" type="xsd:boolean"/>
<!-- NOT REQUIRED - default false -->

<element maxOccurs="1" minOccurs="0" name="deleteWorkflows" type="xsd:boolean"/>
<!-- NOT REQUIRED - default false -->

<element maxOccurs="1" minOccurs="0" name="breakLocks" type="xsd:boolean"/>
<!-- NOT REQUIRED - default false -->

<element maxOccurs="1" minOccurs="0" name="assignWorkflowsToFolders" type="xsd:boolean"/>
<!-- NOT REQUIRED - default false -->

<element maxOccurs="1" minOccurs="0" name="bypassAssetFactoryGroupsNewMenu" type="xsd:boolean"/>
<!-- NOT REQUIRED - default false -->

<element maxOccurs="1" minOccurs="0" name="bypassDestinationGroupsWhenPublishing" type="xsd:boolean"/>
<!-- NOT REQUIRED - default false -->

<element maxOccurs="1" minOccurs="0" name="bypassWorkflowDefintionGroupsForFolders" type="xsd:boolean"/>
<!-- NOT REQUIRED - default false -->

<element maxOccurs="1" minOccurs="0" name="accessManageSiteArea" type="xsd:boolean"/>
<!-- NOT REQUIRED - default false -->

<element maxOccurs="1" minOccurs="0" name="accessAssetFactories" type="xsd:boolean"/>
<!-- NOT REQUIRED - default false -->

<element maxOccurs="1" minOccurs="0" name="accessConfigurationSets" type="xsd:boolean"/>
<!-- NOT REQUIRED - default false -->

<element maxOccurs="1" minOccurs="0" name="accessDataDefinitions" type="xsd:boolean"/>
<!-- NOT REQUIRED - default false -->

<element maxOccurs="1" minOccurs="0" name="accessMetadataSets" type="xsd:boolean"/>
<!-- NOT REQUIRED - default false -->

<element maxOccurs="1" minOccurs="0" name="accessPublishSets" type="xsd:boolean"/>
<!-- NOT REQUIRED - default false -->

<element maxOccurs="1" minOccurs="0" name="accessDestinations" type="xsd:boolean"/>
<!-- NOT REQUIRED - default false -->

<element maxOccurs="1" minOccurs="0" name="accessTransports" type="xsd:boolean"/>
<!-- NOT REQUIRED - default false -->

<element maxOccurs="1" minOccurs="0" name="accessWorkflowDefinitions" type="xsd:boolean"/>
<!-- NOT REQUIRED - default false -->

<element maxOccurs="1" minOccurs="0" name="accessContentTypes" type="xsd:boolean"/>
<!-- NOT REQUIRED - default false -->

<element maxOccurs="1" minOccurs="0" name="accessConnectors" type="xsd:boolean"/>
<!-- NOT REQUIRED - default false -->

<element maxOccurs="1" minOccurs="0" name="publishReadableAdminAreaAssets" type="xsd:boolean"/>
<!-- NOT REQUIRED - default false -->

<element maxOccurs="1" minOccurs="0" name="publishWritableAdminAreaAssets" type="xsd:boolean"/>
<!-- NOT REQUIRED - default false -->

<element maxOccurs="1" minOccurs="0" name="importZipArchive" type="xsd:boolean"/>
<!-- NOT REQUIRED - default false -->

<element maxOccurs="1" minOccurs="0" name="bulkChange" type="xsd:boolean"/>
<!-- NOT REQUIRED - default false -->

<element maxOccurs="1" minOccurs="0" name="recycleBinViewRestoreUserAssets" type="xsd:boolean"/>
<!-- NOT REQUIRED - default false -->

<element maxOccurs="1" minOccurs="0" name="recycleBinDeleteAssets" type="xsd:boolean"/>
<!-- NOT REQUIRED - default false -->

<element maxOccurs="1" minOccurs="0" name="recycleBinViewRestoreAllAssets" type="xsd:boolean"/>
<!-- NOT REQUIRED - default false -->

<element maxOccurs="1" minOccurs="0" name="moveRenameAssets" type="xsd:boolean"/>
<!-- NOT REQUIRED - default false -->

<element maxOccurs="1" minOccurs="0" name="diagnosticTests" type="xsd:boolean"/>
<!-- NOT REQUIRED - default false -->

<element maxOccurs="1" minOccurs="0" name="alwaysAllowedToToggleDataChecks" type="xsd:boolean"/>
<!-- NOT REQUIRED - default false -->

<element maxOccurs="1" minOccurs="0" name="viewPublishQueue" type="xsd:boolean"/>
<!-- NOT REQUIRED - default false -->

<element maxOccurs="1" minOccurs="0" name="reorderPublishQueue" type="xsd:boolean"/>
<!-- NOT REQUIRED - default false -->

<element maxOccurs="1" minOccurs="0" name="cancelPublishJobs" type="xsd:boolean"/>
<!-- NOT REQUIRED - default false -->

<element maxOccurs="1" minOccurs="0" name="sendStaleAssetNotifications" type="xsd:boolean"/>
<!-- NOT REQUIRED - default false -->

<element maxOccurs="1" minOccurs="0" name="brokenLinkReportAccess" type="xsd:boolean"/>
<!-- NOT REQUIRED - default false -->

<element maxOccurs="1" minOccurs="0" name="brokenLinkReportMarkFixed" type="xsd:boolean"/>
<!-- NOT REQUIRED - default false -->

<element maxOccurs="1" minOccurs="0" name="accessEditorConfigurations" type="xsd:boolean"/>
<!-- NOT REQUIRED - default false -->

<element maxOccurs="1" minOccurs="0" name="bypassWysiwygEditorRestrictions" type="xsd:boolean"/>
</sequence>
</complexType>


<complexType name="user">
<sequence>
<!-- the username of the user
					 REQUIRED -->

<element maxOccurs="1" minOccurs="1" name="username" type="xsd:string"/>
<!-- the full name of the user
					 REQUIRED -->

<element maxOccurs="1" minOccurs="0" name="fullName" type="xsd:string"/>
<!-- the user's email
					 REQUIRED -->

<element maxOccurs="1" minOccurs="0" name="email" type="xsd:string"/>
<!-- the way the user is authenticated
					 REQUIRED -->

<element maxOccurs="1" minOccurs="1" name="authType" type="impl:user-auth-types"/>
<!-- The password for this user
					 when authtype is custom, this is not used
					 REQUIRED 
-->
<element maxOccurs="1" minOccurs="1" name="password" type="xsd:string"/>
<!-- Whether or not this user is enabled
					 NOT REQUIRED default false 
-->
<element maxOccurs="1" minOccurs="0" name="enabled" type="xsd:boolean"/>
<!-- A semi-colon separated list of groups this user is a member of
					 REQUIRED 
-->
<element maxOccurs="1" minOccurs="1" name="groups" type="xsd:string"/>
<!-- This user's roles
					 REQUIRED -->

<element maxOccurs="1" minOccurs="1" name="role" type="xsd:string"/>
<!--  Default Site for the user, defaultSiteId takes precedence if both fields are set
					NOT REQUIRED 
-->
<element maxOccurs="1" minOccurs="0" name="defaultSiteId" nillable="true" type="xsd:string"/>
<element maxOccurs="1" minOccurs="0" name="defaultSiteName" nillable="true" type="xsd:string"/>
</sequence>
</complexType>


<simpleType name="user-auth-types">
<restriction base="xsd:string">
<!-- Normal authentication against information
					 stored in Cascade Server itself 
-->
<enumeration value="normal"/>
<!-- Cascade server will delegate to an LDAP
					 server for the authentication process 
-->
<enumeration value="ldap"/>
<!-- Custom module written to authenticate (SSO,
					 for example) 
-->
<enumeration value="custom"/>
</restriction>
</simpleType>

<complexType name="group">
<sequence>
<!-- The name of the group
					 REQUIRED -->

<element maxOccurs="1" minOccurs="1" name="groupName" type="xsd:string"/>
<!-- Semi-colon delimited list of all of the member users of this
					 group 
-->
<element maxOccurs="1" minOccurs="0" name="users" type="xsd:string"/>
<!-- The Roles for this group. Note that this role will also
					 apply to all the members, possibly adding roles for those users 
-->
<element maxOccurs="1" minOccurs="1" name="role" type="xsd:string"/>
</sequence>
</complexType>

<complexType name="site">
<complexContent>
<extension base="impl:named-asset">
<sequence>
<!-- The site url REQUIRED-->

<element maxOccurs="1" minOccurs="1" name="url" type="xsd:string"/>
<!-- The default metadata set for the site
							 Priority: defaultMetadataSetId >
 defaultMetadataSetPath
							 NOT REQUIRED 
-->
<element maxOccurs="1" minOccurs="0" name="defaultMetadataSetId" type="xsd:string"/>
<element maxOccurs="1" minOccurs="0" name="defaultMetadataSetPath" type="xsd:string"/>
<!-- Define the site asset factory container relationship here
							 This asset factory container will determine which asset factories
							 show on that user's dashboard under the "My New Content Wizards" section in the site.
							 NOT REQUIRED default: none 
-->
<!-- Priority: siteAssetFactoryContainerId >
 siteAssetFactoryContainerPath
			 				 NOT REQUIRED 
-->
<element maxOccurs="1" minOccurs="0" name="siteAssetFactoryContainerId" type="xsd:string"/>
<element maxOccurs="1" minOccurs="0" name="siteAssetFactoryContainerPath" type="xsd:string"/>
<!-- Priority: defaultEditorConfigurationId >
 defaultEditorConfigurationPath
			 				 NOT REQUIRED 
-->
<element maxOccurs="1" minOccurs="0" name="defaultEditorConfigurationId" type="xsd:string"/>
<element maxOccurs="1" minOccurs="0" name="defaultEditorConfigurationPath" type="xsd:string"/>
<!-- Define the site starting page relationship here
							 This starting page will override the global starting page set in
							 the system preferences
							 Priority: siteStartingPageId >
 siteStartingPagePath
							 NOT REQUIRED default: none 
-->
<!-- When editing and selected asset is recycled, it is recommended to preserve this relationship by providing selected asset's id
					 		 in case if the selected asset gets restored from the recycle bin. 
-->
<element maxOccurs="1" minOccurs="0" name="siteStartingPageId" type="xsd:string"/>
<!-- Path works only for non-recycled assets -->

<element maxOccurs="1" minOccurs="0" name="siteStartingPagePath" type="xsd:string"/>
<!-- NOT REQUIRED: For reading purposes only. Ignored when editing, copying etc. 
-->
<element maxOccurs="1" minOccurs="0" name="siteStartingPageRecycled" type="xsd:boolean"/>
<element maxOccurs="1" minOccurs="0" name="roleAssignments" type="impl:role-assignments"/>
<!-- Whether or not to publish this set on a schedule
							 NOT REQUIRED default: false 
-->
<element maxOccurs="1" minOccurs="0" name="usesScheduledPublishing" type="xsd:boolean"/>
<!-- Scheduled publish destination selection mode, see "scheduledDestinationMode" simpleType for acceptable values
              NOT REQUIRED
            
-->
<element maxOccurs="1" minOccurs="0" name="scheduledPublishDestinationMode" nillable="true" type="impl:scheduledDestinationMode"/>
<!-- Used in conjunction with scheduledPublishDestinationMode when destinations are to be specified explicitly
              NOT REQUIRED
            
-->
<element maxOccurs="1" minOccurs="0" name="scheduledPublishDestinations" type="impl:destination-list"/>
<!-- The base time this set will be published. For example if one wanted
               this set to publish at 0100, 0500, 0900, 1300, 1700, 2100, I would enter
               one of those times here and set the "publishInterval" to 4, and the
               "publishIntervalUnits" to "hours"
               NOT REQUIRED default: 00:00 (midnight), if cronExpression provided or usesScheduledPublishing is false, ignored 
-->
<element maxOccurs="1" minOccurs="0" name="timeToPublish" type="xsd:time"/>
<!-- Depending on which of the following 3 values is provided, that is the type of scheduled publish that is
						 	 going to be used.
						 	 One is REQUIRED if usesScheduledPublishing is true, else NOT REQUIRED and ignored
-->
<choice>
<!-- Every how many hours the asset should be published. Can be between 1 and 23 
-->
<element maxOccurs="1" minOccurs="0" name="publishIntervalHours" type="xsd:nonNegativeInteger"/>
<!-- Which days of the which the job should publish on - select all days to have a daily publish 
-->
<element maxOccurs="1" minOccurs="0" name="publishDaysOfWeek" type="impl:daysOfWeek"/>
<!-- Applicable only if publishInterval Units is "cron" - only a valid Cron Expression will be accepted 
-->
<element maxOccurs="1" minOccurs="0" name="cronExpression" type="xsd:string"/>
</choice>
<!-- semicolon-delimited list of string user names for which this asset is available for use
							 NOT REQUIRED leave out to assign no users 
-->
<element maxOccurs="1" minOccurs="0" name="sendReportToUsers" type="xsd:string"/>
<!-- semicolon-delimited list of string group names for which this asset is available for use
							 NOT REQUIRED leave out to assign no groups 
-->
<element maxOccurs="1" minOccurs="0" name="sendReportToGroups" type="xsd:string"/>
<!-- Whether or not to send a report when there are no errors
							 NOT REQUIRED default: false 
-->
<element maxOccurs="1" minOccurs="0" name="sendReportOnErrorOnly" type="xsd:boolean"/>
<!-- REQUIRED The recycle bin expiration time -->

<element maxOccurs="1" minOccurs="1" name="recycleBinExpiration" type="impl:recycleBinExpiration"/>
<!-- REQUIRED Unpublish assets when they are moved to an expiration folder 
-->
<element maxOccurs="1" minOccurs="1" name="unpublishOnExpiration" type="xsd:boolean"/>
<!-- REQUIRED Generate broken link report on a schedule specified in Global preferences 
-->
<element maxOccurs="1" minOccurs="1" name="linkCheckerEnabled" type="xsd:boolean"/>
<!-- REQUIRED Check external links when publishing assets in this site 
-->
<element maxOccurs="1" minOccurs="1" name="externalLinkCheckOnPublish" type="xsd:boolean"/>
<!-- The root folder id and containers idds - used only when reading a site. Unused in other cases
						     NOT REQUIRED ignored 
-->
<element maxOccurs="1" minOccurs="0" name="rootFolderId" nillable="true" type="xsd:string"/>
<element maxOccurs="1" minOccurs="0" name="rootAssetFactoryContainerId" nillable="true" type="xsd:string"/>
<element maxOccurs="1" minOccurs="0" name="rootPageConfigurationSetContainerId" nillable="true" type="xsd:string"/>
<element maxOccurs="1" minOccurs="0" name="rootContentTypeContainerId" nillable="true" type="xsd:string"/>
<element maxOccurs="1" minOccurs="0" name="rootConnectorContainerId" nillable="true" type="xsd:string"/>
<element maxOccurs="1" minOccurs="0" name="rootDataDefinitionContainerId" nillable="true" type="xsd:string"/>
<element maxOccurs="1" minOccurs="0" name="rootMetadataSetContainerId" nillable="true" type="xsd:string"/>
<element maxOccurs="1" minOccurs="0" name="rootPublishSetContainerId" nillable="true" type="xsd:string"/>
<element maxOccurs="1" minOccurs="0" name="rootSiteDestinationContainerId" nillable="true" type="xsd:string"/>
<element maxOccurs="1" minOccurs="0" name="rootTransportContainerId" nillable="true" type="xsd:string"/>
<element maxOccurs="1" minOccurs="0" name="rootWorkflowDefinitionContainerId" nillable="true" type="xsd:string"/>
</sequence>
</extension>
</complexContent>
</complexType>

<simpleType name="recycleBinExpiration">
<restriction base="xsd:string">
<enumeration value="1"/>
<enumeration value="15"/>
<enumeration value="30"/>
<enumeration value="never"/>
</restriction>
</simpleType>


<simpleType name="scheduledDestinationMode">
<restriction base="xsd:string">
<enumeration value="all-destinations"/>
<enumeration value="selected-destinations"/>
</restriction>
</simpleType>

<complexType name="role-assignments">
<sequence>
<element maxOccurs="unbounded" minOccurs="0" name="roleAssignment" type="impl:role-assignment"/>
</sequence>
</complexType>

<complexType name="role-assignment">
<sequence>
<!-- Priority: roleId >
 roleName
					 NOT REQUIRED -->

<element maxOccurs="1" minOccurs="0" name="roleId" type="xsd:string"/>
<element maxOccurs="1" minOccurs="0" name="roleName" type="xsd:string"/>
<!--  comma delimited list of usernames -->

<element maxOccurs="1" minOccurs="0" name="users" type="xsd:string"/>
<!--  comma delimited list of group names -->

<element maxOccurs="1" minOccurs="0" name="groups" type="xsd:string"/>
</sequence>
</complexType>

<complexType name="assetFactory">
<complexContent>
<extension base="impl:containered-asset">
<sequence>
<!-- semicolon-delimited list of string group names for which this asset is available for use
							 NOT REQUIRED leave out to assign no groups 
-->
<element maxOccurs="1" minOccurs="0" name="applicableGroups" type="xsd:string"/>
<!-- The type of asset this factory will create
							 REQUIRED 
-->
<element maxOccurs="1" minOccurs="1" name="assetType" type="xsd:string"/>
<!-- The default/base asset for this factory: assets created using
							 this factory are initially populated with this asset's data.
							 NOT REQUIRED default: none 
-->
<!-- When editing and selected asset is recycled, it is recommended to preserve this relationship by providing selected asset's id
					 		 in case if the selected asset gets restored from the recycle bin.
					 		 Priority: baseAssetId >
 baseAssetPath
					 		 NOT REQUIRED 
-->
<element maxOccurs="1" minOccurs="0" name="baseAssetId" type="xsd:string"/>
<!-- Path works only for non-recycled assets -->

<element maxOccurs="1" minOccurs="0" name="baseAssetPath" type="xsd:string"/>
<!-- NOT REQUIRED: For reading purposes only. Ignored when editing, copying etc. 
-->
<element maxOccurs="1" minOccurs="0" name="baseAssetRecycled" type="xsd:boolean"/>
<!-- The description text for this factory which is displayed in the new menu.
                           NOT REQUIRED default: null 
-->
<element maxOccurs="1" minOccurs="0" name="description" type="xsd:string"/>
<!-- where assets created from this factory must be placed if specified
                           NOT REQUIRED default: none 
-->
<!-- When editing and selected asset is recycled, it is recommended to preserve this relationship by providing selected asset's id
					 		 in case if the selected asset gets restored from the recycle bin.
					 		 Priority: placementFolderId >
 placementFolderPath
					 		 NOT REQUIRED 
-->
<element maxOccurs="1" minOccurs="0" name="placementFolderId" type="xsd:string"/>
<!-- Path works only for non-recycled assets -->

<element maxOccurs="1" minOccurs="0" name="placementFolderPath" type="xsd:string"/>
<!-- NOT REQUIRED: For reading purposes only. Ignored when editing, copying etc. 
-->
<element maxOccurs="1" minOccurs="0" name="placementFolderRecycled" type="xsd:boolean"/>
<!-- when the placement folder is specified, this allows assets to be placed
							 in subfolders of that folder as well
							 NOT REQUIRED default: false 
-->
<element maxOccurs="1" minOccurs="0" name="allowSubfolderPlacement" type="xsd:boolean"/>
<!-- assets created from this factory will be positioned at this folder position
							 NOT REQURIED default: 0 
-->
<element maxOccurs="1" minOccurs="0" name="folderPlacementPosition" type="xsd:nonNegativeInteger"/>
<!-- If an asset is created from this factory and placed in a folder with an asset
							 of the same name, whether or not that asset will be overwritten.
							 NOT REQUIRED default: false 
-->
<element maxOccurs="1" minOccurs="0" name="overwrite" type="xsd:boolean"/>
<!-- What workflow behavior to use when creating assets using this asset factory
							 REQUIRED 
-->
<element maxOccurs="1" minOccurs="1" name="workflowMode" type="impl:asset-factory-workflow-mode"/>
<!-- When workflowMode is "factory-controlled", this specifies the workflow definition
							 to use
							 Priority: workflowDefinitionId >
 workflowDefinitionPath
							 NOT REQUIRED default: empty 
-->
<element maxOccurs="1" minOccurs="0" name="workflowDefinitionId" type="xsd:string"/>
<element maxOccurs="1" minOccurs="0" name="workflowDefinitionPath" type="xsd:string"/>
<!-- An array of asset factory plugins assigned to the asset factory
							 NOT REQUIRED default: empty 
-->
<element maxOccurs="1" minOccurs="0" name="plugins" type="impl:asset-factory-plugins"/>
</sequence>
</extension>
</complexContent>
</complexType>


<complexType name="asset-factory-plugins">
<sequence>
<element maxOccurs="unbounded" minOccurs="0" name="plugin" type="impl:asset-factory-plugin"/>
</sequence>
</complexType>

<complexType name="asset-factory-plugin">
<sequence>
<!-- Name of the asset factory plugin - this is the exact class, like "com.cms.assetfactory.DisplayToSystemNamePlugin"
			         REQUIRED 
-->
<element maxOccurs="1" minOccurs="1" name="name" type="xsd:string"/>
<element maxOccurs="1" minOccurs="0" name="parameters" type="impl:asset-factory-plugin-parameters"/>
</sequence>
</complexType>

<complexType name="asset-factory-plugin-parameters">
<sequence>
<element maxOccurs="unbounded" minOccurs="0" name="parameter" type="impl:asset-factory-plugin-parameter"/>
</sequence>
</complexType>

<complexType name="asset-factory-plugin-parameter">
<sequence>
<!-- Parameter name (not label), for example "assetfactory.plugin.filelimit.param.name.size"
					 REQUIRED 
-->
<element maxOccurs="1" minOccurs="1" name="name" type="xsd:string"/>
<!-- Parameter value
					 NOT REQUIRED default: empty string 
-->
<element maxOccurs="1" minOccurs="0" name="value" type="xsd:string"/>
</sequence>
</complexType>

<simpleType name="asset-factory-workflow-mode">
<restriction base="xsd:string">
<enumeration value="folder-controlled"/>
<enumeration value="factory-controlled"/>
<enumeration value="none"/>
</restriction>
</simpleType>

<complexType name="assetFactoryContainer">
<complexContent>
<extension base="impl:containered-asset">
<sequence>
<!-- semicolon-delimited list of string group names for which this asset is available for use
							 NOT REQUIRED leave out to assign no groups 
-->
<element maxOccurs="1" minOccurs="0" name="applicableGroups" type="xsd:string"/>
<!-- string describing the asset factory container, displayed in the new menu
							 NOT REQUIRED leave out to assign no description 
-->
<element maxOccurs="1" minOccurs="0" name="description" type="xsd:string"/>
<!-- the array of children -->

<element maxOccurs="1" minOccurs="0" name="children" nillable="true" type="impl:container-children"/>
</sequence>
</extension>
</complexContent>
</complexType>

<complexType name="contentType">
<complexContent>
<extension base="impl:containered-asset">
<sequence>
<!-- Priority: pageConfigurationSetId >
 pageConfigurationSetPath
							 One is REQUIRED 
-->
<element maxOccurs="1" minOccurs="0" name="pageConfigurationSetId" type="xsd:string"/>
<element maxOccurs="1" minOccurs="0" name="pageConfigurationSetPath" type="xsd:string"/>
<!-- Priority: metadataSetId >
 metadataSetPath
							 One is REQUIRED 
-->
<element maxOccurs="1" minOccurs="0" name="metadataSetId" type="xsd:string"/>
<element maxOccurs="1" minOccurs="0" name="metadataSetPath" type="xsd:string"/>
<!-- Priority: dataDefinitionId >
 dataDefinitionPath
							 NOT REQUIRED 
-->
<element maxOccurs="1" minOccurs="0" name="dataDefinitionId" type="xsd:string"/>
<element maxOccurs="1" minOccurs="0" name="dataDefinitionPath" type="xsd:string"/>
<!-- Priority: editorConfigurationId >
 editorConfigurationPath
							 NOT REQUIRED 
-->
<element maxOccurs="1" minOccurs="0" name="editorConfigurationId" type="xsd:string"/>
<element maxOccurs="1" minOccurs="0" name="editorConfigurationPath" type="xsd:string"/>
<!-- The array of contentTypePageConfigurations
							 NOT REQUIRED - if not specified, the default publish mode "all-destinations" is used for each pageConfiguration
							              - ignored in Global area 
-->
<element maxOccurs="1" minOccurs="0" name="contentTypePageConfigurations" nillable="true" type="impl:contentTypePageConfigurations"/>
<!-- The array of inlineEditableFields
						     NOT REQUIRED - if not specified, none of the regions or fields will be inline editable 
-->
<element maxOccurs="1" minOccurs="0" name="inlineEditableFields" nillable="true" type="impl:inlineEditableFields"/>
</sequence>
</extension>
</complexContent>
</complexType>

<complexType name="contentTypePageConfigurations">
<sequence>
<element maxOccurs="unbounded" minOccurs="0" name="contentTypePageConfiguration" nillable="true" type="impl:contentTypePageConfiguration"/>
</sequence>
</complexType>

<complexType name="contentTypePageConfiguration">
<sequence>
<!-- The page configuration
					 Priority: pageConfigurationId >
 pageConfigurationName
					 One is REQUIRED 
-->
<element maxOccurs="1" minOccurs="0" name="pageConfigurationId" type="xsd:string"/>
<element maxOccurs="1" minOccurs="0" name="pageConfigurationName" type="xsd:string"/>
<!-- REQUIRED -->

<element maxOccurs="1" minOccurs="1" name="publishMode" type="impl:contentTypePageConfigurationPublishMode"/>
<!-- REQUIRED if "publishMode" is "selected-destinations", else NOT REQUIRED and ignored 
-->
<element maxOccurs="1" minOccurs="0" name="destinations" nillable="true" type="impl:destination-list"/>
</sequence>
</complexType>

<simpleType name="contentTypePageConfigurationPublishMode">
<restriction base="xsd:string">
<enumeration value="all-destinations"/>
<enumeration value="selected-destinations"/>
<enumeration value="do-not-publish"/>
</restriction>
</simpleType>

<complexType name="destination-list">
<sequence>
<element maxOccurs="unbounded" minOccurs="0" name="destination" type="impl:identifier"/>
</sequence>
</complexType>

<complexType name="inlineEditableFields">
<sequence>
<element maxOccurs="unbounded" minOccurs="0" name="inlineEditableField" nillable="true" type="impl:inlineEditableField"/>
</sequence>
</complexType>

<complexType name="inlineEditableField">
<sequence>
<element maxOccurs="1" minOccurs="1" name="pageConfigurationName" type="xsd:string"/>
<!-- REQUIRED -->

<element maxOccurs="1" minOccurs="1" name="pageRegionName" type="xsd:string"/>
<!-- NOT REQUIRED
				     This property is only applicable for data-definition type fields and is need only if the field is inside of a group.
				     It holds a list of ancestor data definition groups presented in a form of path. For example, if this field is in
				     a group "cities" and that group is in another group "countries", then this property would have value "countries/cities" 
-->
<element maxOccurs="1" minOccurs="0" name="dataDefinitionGroupPath" nillable="true" type="xsd:string"/>
<!-- REQUIRED -->

<element maxOccurs="1" minOccurs="1" name="type" type="impl:inlineEditableFieldType"/>
<!-- REQUIRED for metadata and data-definition field type
					 NOT REQUIRED for xhtml field type
				     Use title, displayName, summary, teaser, keywords, description, author, startDate, endDate, reviewDate for wired metadata fields,
				     field name for dynamic metadata field or field identifier for a data definition field. 
-->
<element maxOccurs="1" minOccurs="0" name="name" nillable="true" type="xsd:string"/>
</sequence>
</complexType>

<simpleType name="inlineEditableFieldType">
<restriction base="xsd:string">
<enumeration value="wired-metadata"/>
<enumeration value="dynamic-metadata"/>
<enumeration value="data-definition"/>
<enumeration value="xhtml"/>
</restriction>
</simpleType>

<complexType name="contentTypeContainer">
<complexContent>
<extension base="impl:containered-asset">
<sequence>
<!-- the array of children -->

<element maxOccurs="1" minOccurs="0" name="children" nillable="true" type="impl:container-children"/>
</sequence>
</extension>
</complexContent>
</complexType>

<complexType name="pageConfigurationSet">
<complexContent>
<extension base="impl:containered-asset">
<sequence>
<!-- The individual page configurations contained within this set 
-->
<element maxOccurs="1" minOccurs="1" name="pageConfigurations" type="impl:page-configurations"/>
</sequence>
</extension>
</complexContent>
</complexType>

<complexType name="page-configurations">
<sequence>
<element maxOccurs="unbounded" minOccurs="1" name="pageConfiguration" type="impl:pageConfiguration"/>
</sequence>
</complexType>

<complexType name="pageConfiguration">
<complexContent>
<extension base="impl:base-asset">
<sequence>
<!-- A single page configuration's name, such as "XML" or "Full HTML"
							 REQUIRED 
-->
<element maxOccurs="1" minOccurs="1" name="name" type="xsd:string"/>
<!-- Whether or not this is the default configuration
							 REQUIRED 
-->
<element maxOccurs="1" minOccurs="1" name="defaultConfiguration" type="xsd:boolean"/>
<!-- The template for this configuration
							 Priority: templateId >
 templatePath
							 One is REQUIRED for pageConfigurationSet
							 NOT REQUIRED for page 
-->
<element maxOccurs="1" minOccurs="0" name="templateId" type="xsd:string"/>
<element maxOccurs="1" minOccurs="0" name="templatePath" type="xsd:string"/>
<!-- The overall xslt format applied to this page configuration
							 Priority: formatId >
 formatPath
							 NOT REQUIRED default none 
-->
<!-- When editing and selected asset is recycled, it is recommended to preserve this relationship by providing selected asset's id
					 		 in case if the selected asset gets restored from the recycle bin. 
-->
<element maxOccurs="1" minOccurs="0" name="formatId" type="xsd:string"/>
<!-- Path works only for non-recycled assets -->

<element maxOccurs="1" minOccurs="0" name="formatPath" type="xsd:string"/>
<!-- NOT REQUIRED: For reading purposes only. Ignored when editing, copying etc. 
-->
<element maxOccurs="1" minOccurs="0" name="formatRecycled" type="xsd:boolean"/>
<!-- The individual page region assignments for this configuration 
-->
<element maxOccurs="1" minOccurs="0" name="pageRegions" type="impl:page-regions"/>
<!-- The output file extension, for example ".html"
							 Only required when in a site 
-->
<element maxOccurs="1" minOccurs="0" name="outputExtension" nillable="true" type="xsd:string"/>
<!-- The content type this target serializes its output as
							 Only required when in a site 
-->
<element maxOccurs="1" minOccurs="0" name="serializationType" nillable="true" type="impl:serialization-type"/>
<!-- When the serializationType is "XML", should Cascade include the XML
							 declaration in published files?
							 NOT REQUIRED default: false 
-->
<element maxOccurs="1" minOccurs="0" name="includeXMLDeclaration" nillable="true" type="xsd:boolean"/>
<!-- Is this configuration publishable? -->

<element maxOccurs="1" minOccurs="0" name="publishable" nillable="true" type="xsd:boolean"/>
</sequence>
</extension>
</complexContent>
</complexType>

<complexType name="page-regions">
<sequence>
<element maxOccurs="unbounded" minOccurs="0" name="pageRegion" type="impl:pageRegion"/>
</sequence>
</complexType>

<complexType name="pageRegion">
<complexContent>
<extension base="impl:base-asset">
<sequence>
<!-- The name of this page region, for example, "DEFAULT", or "JAVASCRIPT-INCLUDE"
							 This MUST correspond to the name of a region defined in the template.
							 REQUIRED 
-->
<element maxOccurs="1" minOccurs="1" name="name" type="xsd:string"/>
<!-- The block assigned at this page region
							 Priority: blockId >
 blockPath
							 NOT REQUIRED 
-->
<!-- When editing and selected asset is recycled, it is recommended to preserve this relationship by providing selected asset's id
					 		 in case if the selected asset gets restored from the recycle bin. 
-->
<element maxOccurs="1" minOccurs="0" name="blockId" type="xsd:string"/>
<!-- Path works only for non-recycled assets -->

<element maxOccurs="1" minOccurs="0" name="blockPath" type="xsd:string"/>
<!-- NOT REQUIRED: For reading purposes only. Ignored when editing, copying etc. 
-->
<element maxOccurs="1" minOccurs="0" name="blockRecycled" type="xsd:boolean"/>
<!-- When this is set to true, this will keep a block defined at a lower
							 level from applying to this region
							 NOT REQUIRED default: false 
-->
<element maxOccurs="1" minOccurs="0" name="noBlock" type="xsd:boolean"/>
<!-- The format assigned at this page region, can be either xslt or script
					 		 Priority: formatId >
 formatPath
					 		 NOT REQUIRED 
-->
<!-- When editing and selected asset is recycled, it is recommended to preserve this relationship by providing selected asset's id
					 		 in case if the selected asset gets restored from the recycle bin. 
-->
<element maxOccurs="1" minOccurs="0" name="formatId" type="xsd:string"/>
<!-- Path works only for non-recycled assets -->

<element maxOccurs="1" minOccurs="0" name="formatPath" type="xsd:string"/>
<!-- NOT REQUIRED: For reading purposes only. Ignored when editing, copying etc. 
-->
<element maxOccurs="1" minOccurs="0" name="formatRecycled" type="xsd:boolean"/>
<!-- When this is set to true, this will keep a format defined at a lower
							 level from applying to this region
							 NOT REQUIRED default: false 
-->
<element maxOccurs="1" minOccurs="0" name="noFormat" type="xsd:boolean"/>
</sequence>
</extension>
</complexContent>
</complexType>

<complexType name="pageConfigurationSetContainer">
<complexContent>
<extension base="impl:containered-asset">
<sequence>
<!-- the array of children -->

<element maxOccurs="1" minOccurs="0" name="children" nillable="true" type="impl:container-children"/>
</sequence>
</extension>
</complexContent>
</complexType>

<complexType name="dataDefinition">
<complexContent>
<extension base="impl:containered-asset">
<sequence>
<!-- The XML content of this data definition
							 REQUIRED 
-->
<element maxOccurs="1" minOccurs="1" name="xml" type="xsd:string"/>
</sequence>
</extension>
</complexContent>
</complexType>

<complexType name="dataDefinitionContainer">
<complexContent>
<extension base="impl:containered-asset">
<sequence>
<!-- the array of children -->

<element maxOccurs="1" minOccurs="0" name="children" nillable="true" type="impl:container-children"/>
</sequence>
</extension>
</complexContent>
</complexType>

<complexType name="metadataSet">
<complexContent>
<extension base="impl:containered-asset">
<sequence>
<!-- Whether or not the author field is required on assets using this metadata set
							 NOT REQUIRED default false 
-->
<element maxOccurs="1" minOccurs="0" name="authorFieldRequired" type="xsd:boolean"/>
<!-- The visibility of the author field for assets using this metadata set
							 NOT REQUIRED default "visible" 
-->
<element maxOccurs="1" minOccurs="0" name="authorFieldVisibility" type="impl:metadata-field-visibility"/>
<!-- Whether or not the description field is required on assets using this metadata set
							 NOT REQUIRED default false 
-->
<element maxOccurs="1" minOccurs="0" name="descriptionFieldRequired" type="xsd:boolean"/>
<!-- The visibility of the description field for assets using this metadata set
							 NOT REQUIRED default "visible" 
-->
<element maxOccurs="1" minOccurs="0" name="descriptionFieldVisibility" type="impl:metadata-field-visibility"/>
<!-- Whether or not the display name field is required on assets using this metadata set
							 NOT REQUIRED default false 
-->
<element maxOccurs="1" minOccurs="0" name="displayNameFieldRequired" type="xsd:boolean"/>
<!-- The visibility of the display name field for assets using this metadata set
							 NOT REQUIRED default "visible" 
-->
<element maxOccurs="1" minOccurs="0" name="displayNameFieldVisibility" type="impl:metadata-field-visibility"/>
<!-- Whether or not the end date field is required on assets using this metadata set
							 NOT REQUIRED default false 
-->
<element maxOccurs="1" minOccurs="0" name="endDateFieldRequired" type="xsd:boolean"/>
<!-- The visibility of the end date field for assets using this metadata set
							 NOT REQUIRED default "visible" 
-->
<element maxOccurs="1" minOccurs="0" name="endDateFieldVisibility" type="impl:metadata-field-visibility"/>
<!-- Whether or not the expiration folder field is required on assets using this metadata set
							 NOT REQUIRED default false 
-->
<element maxOccurs="1" minOccurs="0" name="expirationFolderFieldRequired" type="xsd:boolean"/>
<!-- The visibility of the expiration folder field for assets using this metadata set
							 NOT REQUIRED default "visible" 
-->
<element maxOccurs="1" minOccurs="0" name="expirationFolderFieldVisibility" type="impl:metadata-field-visibility"/>
<!-- Whether or not the keywords field is required on assets using this metadata set
							 NOT REQUIRED default false 
-->
<element maxOccurs="1" minOccurs="0" name="keywordsFieldRequired" type="xsd:boolean"/>
<!-- The visibility of the keywords field for assets using this metadata set
							 NOT REQUIRED default "visible" 
-->
<element maxOccurs="1" minOccurs="0" name="keywordsFieldVisibility" type="impl:metadata-field-visibility"/>
<!-- Whether or not the review date field is required on assets using this metadata set
							 NOT REQUIRED default false 
-->
<element maxOccurs="1" minOccurs="0" name="reviewDateFieldRequired" type="xsd:boolean"/>
<!-- The visibility of the review date field for assets using this metadata set
							 NOT REQUIRED default "visible" 
-->
<element maxOccurs="1" minOccurs="0" name="reviewDateFieldVisibility" type="impl:metadata-field-visibility"/>
<!-- Whether or not the start date field is required on assets using this metadata set
							 NOT REQUIRED default false 
-->
<element maxOccurs="1" minOccurs="0" name="startDateFieldRequired" type="xsd:boolean"/>
<!-- The visibility of the start date field for assets using this metadata set
							 NOT REQUIRED default "visible" 
-->
<element maxOccurs="1" minOccurs="0" name="startDateFieldVisibility" type="impl:metadata-field-visibility"/>
<!-- Whether or not the summary field is required on assets using this metadata set
							 NOT REQUIRED default false 
-->
<element maxOccurs="1" minOccurs="0" name="summaryFieldRequired" type="xsd:boolean"/>
<!-- The visibility of the summary field for assets using this metadata set
							 NOT REQUIRED default "visible" 
-->
<element maxOccurs="1" minOccurs="0" name="summaryFieldVisibility" type="impl:metadata-field-visibility"/>
<!-- Whether or not the teaser field is required on assets using this metadata set
							 NOT REQUIRED default false 
-->
<element maxOccurs="1" minOccurs="0" name="teaserFieldRequired" type="xsd:boolean"/>
<!-- The visibility of the teaser field for assets using this metadata set
							 NOT REQUIRED default "visible" 
-->
<element maxOccurs="1" minOccurs="0" name="teaserFieldVisibility" type="impl:metadata-field-visibility"/>
<!-- Whether or not the title field is required on assets using this metadata set
							 NOT REQUIRED default false 
-->
<element maxOccurs="1" minOccurs="0" name="titleFieldRequired" type="xsd:boolean"/>
<!-- The visibility of the title field for assets using this metadata set
							 NOT REQUIRED default "visible" 
-->
<element maxOccurs="1" minOccurs="0" name="titleFieldVisibility" type="impl:metadata-field-visibility"/>
<!-- The dynamic metadata field definitions -->

<element maxOccurs="1" minOccurs="0" name="dynamicMetadataFieldDefinitions" type="impl:dynamic-metadata-field-definitions"/>
</sequence>
</extension>
</complexContent>
</complexType>

<complexType name="dynamic-metadata-field-definitions">
<sequence>
<element maxOccurs="unbounded" minOccurs="0" name="dynamicMetadataFieldDefinition" type="impl:dynamicMetadataFieldDefinition"/>
</sequence>
</complexType>

<complexType name="dynamicMetadataFieldDefinition">
<sequence>
<!-- The name of the dynamic metadata field
					 REQUIRED 
-->
<element maxOccurs="1" minOccurs="1" name="name" type="xsd:string"/>
<!-- The label of the dynamic metadata field
					 REQUIRED 
-->
<element maxOccurs="1" minOccurs="1" name="label" type="xsd:string"/>
<!-- The type of the dynamic metadata field
					 REQUIRED 
-->
<element maxOccurs="1" minOccurs="1" name="fieldType" type="impl:dynamic-metadata-field-type"/>
<!-- Whether or not this field is required
					 NOT REQUIRED default false 
-->
<element maxOccurs="1" minOccurs="0" name="required" type="xsd:boolean"/>
<!-- The visibility of this field
					 NOT REQUIRED default visible 
-->
<element maxOccurs="1" minOccurs="0" name="visibility" type="impl:metadata-field-visibility"/>
<!-- REQUIRED for radio, checkbox, dropdown and multiselect types
					 NOT REQUIRED and ignored for text type 
-->
<element maxOccurs="1" minOccurs="0" name="possibleValues" type="impl:dynamic-metadata-field-definition-values"/>
</sequence>
</complexType>

<complexType name="dynamic-metadata-field-definition-values">
<sequence>
<element maxOccurs="unbounded" minOccurs="0" name="possibleValue" nillable="true" type="impl:dynamic-metadata-field-definition-value"/>
</sequence>
</complexType>

<complexType name="dynamic-metadata-field-definition-value">
<sequence>
<!-- The actual string value
				     NOT REQUIRED - when not provided, an empty string will be used as a value 
-->
<element maxOccurs="1" minOccurs="0" name="value" type="xsd:string"/>
<!-- Whether or not this value should be checked by default when creating new assets through web UI
					 NOT REQUIRED - false by default 
-->
<element maxOccurs="1" minOccurs="0" name="selectedByDefault" type="xsd:boolean"/>
</sequence>
</complexType>

<simpleType name="metadata-field-visibility">
<restriction base="xsd:string">
<enumeration value="inline"/>
<enumeration value="hidden"/>
<enumeration value="visible"/>
</restriction>
</simpleType>

<simpleType name="dynamic-metadata-field-type">
<restriction base="xsd:string">
<enumeration value="text"/>
<enumeration value="radio"/>
<enumeration value="dropdown"/>
<enumeration value="checkbox"/>
<enumeration value="multiselect"/>
</restriction>
</simpleType>

<complexType name="metadataSetContainer">
<complexContent>
<extension base="impl:containered-asset">
<sequence>
<!-- the array of children -->

<element maxOccurs="1" minOccurs="0" name="children" nillable="true" type="impl:container-children"/>
</sequence>
</extension>
</complexContent>
</complexType>

<complexType name="publishSet">
<complexContent>
<extension base="impl:containered-asset">
<sequence>
<!-- A list of files that is included in this publish set
							 NOT REQUIRED default: empty 
-->
<element maxOccurs="1" minOccurs="0" name="files" type="impl:publishable-asset-list"/>
<!-- A list of folders that is included in this publish set
							 NOT REQUIRED default: empty 
-->
<element maxOccurs="1" minOccurs="0" name="folders" type="impl:publishable-asset-list"/>
<!-- A list of pages that is included in this publish set
							 NOT REQUIRED default: empty 
-->
<element maxOccurs="1" minOccurs="0" name="pages" type="impl:publishable-asset-list"/>
<!-- Whether or not to publish this set on a schedule
							 NOT REQUIRED default: false 
-->
<element maxOccurs="1" minOccurs="0" name="usesScheduledPublishing" type="xsd:boolean"/>
<!-- Scheduled publish destination selection mode, see "scheduledPublishDestinationMode" simpleType for acceptable values
              NOT REQUIRED
            
-->
<element maxOccurs="1" minOccurs="0" name="scheduledPublishDestinationMode" nillable="true" type="impl:scheduledDestinationMode"/>
<!-- Used in conjunction with scheduledPublishDestinationMode when destinations are to be specified explicitly
              NOT REQUIRED
            
-->
<element maxOccurs="1" minOccurs="0" name="scheduledPublishDestinations" type="impl:destination-list"/>
<!-- The base time this set will be published. For example if one wanted
               this set to publish at 0100, 0500, 0900, 1300, 1700, 2100, I would enter
               one of those times here and set the "publishInterval" to 4, and the
               "publishIntervalUnits" to "hours"
               NOT REQUIRED default: 00:00 (midnight), if cronExpression provided or usesScheduledPublishing is false, ignored 
-->
<element maxOccurs="1" minOccurs="0" name="timeToPublish" type="xsd:time"/>
<!-- Depending on which of the following 3 values is provided, that is the type of scheduled publish that is
						 	 going to be used.
						 	 One is REQUIRED if usesScheduledPublishing is true, else NOT REQUIRED and ignored
-->
<choice>
<!-- Every how many hours the asset should be published. Can be between 1 and 23 
-->
<element maxOccurs="1" minOccurs="0" name="publishIntervalHours" type="xsd:nonNegativeInteger"/>
<!-- Which days of the which the job should publish on - select all days to have a daily publish 
-->
<element maxOccurs="1" minOccurs="0" name="publishDaysOfWeek" type="impl:daysOfWeek"/>
<!-- Applicable only if publishInterval Units is "cron" - only a valid Cron Expression will be accepted 
-->
<element maxOccurs="1" minOccurs="0" name="cronExpression" type="xsd:string"/>
</choice>
<!-- semicolon-delimited list of string user names for which this asset is available for use
							 NOT REQUIRED leave out to assign no users 
-->
<element maxOccurs="1" minOccurs="0" name="sendReportToUsers" type="xsd:string"/>
<!-- semicolon-delimited list of string group names for which this asset is available for use
							 NOT REQUIRED leave out to assign no groups 
-->
<element maxOccurs="1" minOccurs="0" name="sendReportToGroups" type="xsd:string"/>
<!-- Whether or not to send a report when there are no errors
							 NOT REQUIRED default: false 
-->
<element maxOccurs="1" minOccurs="0" name="sendReportOnErrorOnly" type="xsd:boolean"/>
</sequence>
</extension>
</complexContent>
</complexType>


<complexType name="publishable-asset-list">
<sequence>
<element maxOccurs="unbounded" minOccurs="0" name="publishableAssetIdentifier" type="impl:identifier"/>
</sequence>
</complexType>


<complexType name="daysOfWeek">
<sequence>
<element maxOccurs="unbounded" minOccurs="0" name="dayOfWeek" type="impl:dayOfWeek"/>
</sequence>
</complexType>

<simpleType name="dayOfWeek">
<restriction base="xsd:string">
<enumeration value="Monday"/>
<enumeration value="Tuesday"/>
<enumeration value="Wednesday"/>
<enumeration value="Thursday"/>
<enumeration value="Friday"/>
<enumeration value="Saturday"/>
<enumeration value="Sunday"/>
</restriction>
</simpleType>

<complexType name="publishSetContainer">
<complexContent>
<extension base="impl:containered-asset">
<sequence>
<!-- the array of children -->

<element maxOccurs="1" minOccurs="0" name="children" nillable="true" type="impl:container-children"/>
</sequence>
</extension>
</complexContent>
</complexType>

<complexType name="siteDestinationContainer">
<complexContent>
<extension base="impl:containered-asset">
<sequence>
<!-- the array of children -->

<element maxOccurs="1" minOccurs="0" name="children" nillable="true" type="impl:container-children"/>
</sequence>
</extension>
</complexContent>
</complexType>

<complexType name="target">
<complexContent>
<extension base="impl:named-asset">
<sequence>
<!-- For defining the parent target relationship
							 Priority: parentTargetId >
 parentTargetPath
							 One is REQUIRED 
-->
<element maxOccurs="1" minOccurs="0" name="parentTargetId" type="xsd:string"/>
<element maxOccurs="1" minOccurs="0" name="parentTargetPath" type="xsd:string"/>
<!-- The path of this target. When creating this need not be specified.
							 When editing this will be the CURRENT path of the target. 
-->
<element maxOccurs="1" minOccurs="0" name="path" type="xsd:string"/>
<!-- For defining the base folder relationship
							 Priority: baseFolderId >
 baseFolderPath
							 One is REQUIRED 
-->
<element maxOccurs="1" minOccurs="0" name="baseFolderId" type="xsd:string"/>
<element maxOccurs="1" minOccurs="0" name="baseFolderPath" type="xsd:string"/>
<!-- The output file extension, for example ".html"
							 REQUIRED 
-->
<element maxOccurs="1" minOccurs="1" name="outputExtension" type="xsd:string"/>
<!-- The CSS classes that pages using this target will have available to them
							 in the WYSIWYG editor (comma-delimted list)
							 NOT REQUIRED default: empty 
-->
<element maxOccurs="1" minOccurs="0" name="cssClasses" type="xsd:string"/>
<!-- The file that defines the CSS classes in the cssClasses field
							 NOT REQUIRED default: none 
-->
<!-- When editing and selected asset is recycled, it is recommended to preserve this relationship by providing selected asset's id
					 		 in case if the selected asset gets restored from the recycle bin.
					 		 Priority: cssFileId >
 cssFilePath
					 		 NOT REQUIRED 
-->
<element maxOccurs="1" minOccurs="0" name="cssFileId" type="xsd:string"/>
<!-- Path works only for non-recycled assets -->

<element maxOccurs="1" minOccurs="0" name="cssFilePath" type="xsd:string"/>
<!-- NOT REQUIRED: For reading purposes only. Ignored when editing, copying etc. 
-->
<element maxOccurs="1" minOccurs="0" name="cssFileRecycled" type="xsd:boolean"/>
<!-- The content type this target serializes its output as
							 REQUIRED 
-->
<element maxOccurs="1" minOccurs="1" name="serializationType" type="impl:serialization-type"/>
<!-- When the serializationType is "XML", should Cascade include the XML
							 declaration in published files?
							 NOT REQUIRED default: false 
-->
<element maxOccurs="1" minOccurs="0" name="includeXMLDeclaration" type="xsd:boolean"/>
<!-- When publishing, whether or not to include the target path as part
							 of the path of the published file
							 NOT REQUIRED default: false 
-->
<element maxOccurs="1" minOccurs="0" name="includeTargetPath" type="xsd:boolean"/>
<!-- When publishing, whether or not to remove the base folder's path from
							 the path of the published file
							 NOT REQUIRED default: false 
-->
<element maxOccurs="1" minOccurs="0" name="removeBaseFolder" type="xsd:boolean"/>
<!-- Whether or not to publish this set on a schedule
							 NOT REQUIRED default: false 
-->
<element maxOccurs="1" minOccurs="0" name="usesScheduledPublishing" type="xsd:boolean"/>
<!-- Scheduled publish destination selection mode, see "scheduledPublishDestinationMode" simpleType for acceptable values
              NOT REQUIRED
            
-->
<element maxOccurs="1" minOccurs="0" name="scheduledPublishDestinationMode" nillable="true" type="impl:scheduledDestinationMode"/>
<!-- Used in conjunction with scheduledPublishDestinationMode when destinations are to be specified explicitly
              NOT REQUIRED
            
-->
<element maxOccurs="1" minOccurs="0" name="scheduledPublishDestinations" type="impl:destination-list"/>
<!-- The base time this set will be published. For example if one wanted
							 this set to publish at 0100, 0500, 0900, 1300, 1700, 2100, I would enter
							 one of those times here and set the "publishInterval" to 4, and the
							 "publishIntervalUnits" to "hours"
							 NOT REQUIRED default: 00:00 (midnight), if cronExpression provided or usesScheduledPublishing is false, ignored 
-->
<element maxOccurs="1" minOccurs="0" name="timeToPublish" type="xsd:time"/>
<!-- Depending on which of the following 3 values is provided, that is the type of scheduled publish that is
						 	 going to be used.
						 	 One is REQUIRED if usesScheduledPublishing is true, else NOT REQUIRED and ignored
-->
<choice>
<!-- Every how many hours the asset should be published. Can be between 1 and 23 
-->
<element maxOccurs="1" minOccurs="0" name="publishIntervalHours" type="xsd:nonNegativeInteger"/>
<!-- Which days of the which the job should publish on - select all days to have a daily publish 
-->
<element maxOccurs="1" minOccurs="0" name="publishDaysOfWeek" type="impl:daysOfWeek"/>
<!-- Applicable only if publishInterval Units is "cron" - only a valid Cron Expression will be accepted 
-->
<element maxOccurs="1" minOccurs="0" name="cronExpression" type="xsd:string"/>
</choice>
<!-- semicolon-delimited list of string user names for which this asset is available for use
							 NOT REQUIRED leave out to assign no users 
-->
<element maxOccurs="1" minOccurs="0" name="sendReportToUsers" type="xsd:string"/>
<!-- semicolon-delimited list of string group names for which this asset is available for use
							 NOT REQUIRED leave out to assign no groups 
-->
<element maxOccurs="1" minOccurs="0" name="sendReportToGroups" type="xsd:string"/>
<!-- Whether or not to send a report when there are no errors
							 NOT REQUIRED default: false 
-->
<element maxOccurs="1" minOccurs="0" name="sendReportOnErrorOnly" type="xsd:boolean"/>
<!-- the array of children -->

<element maxOccurs="1" minOccurs="0" name="children" nillable="true" type="impl:container-children"/>
</sequence>
</extension>
</complexContent>
</complexType>


<simpleType name="serialization-type">
<restriction base="xsd:string">
<enumeration value="HTML"/>
<enumeration value="XML"/>
<enumeration value="PDF"/>
<enumeration value="RTF"/>
<enumeration value="JSON"/>
<enumeration value="JS"/>
<enumeration value="CSS"/>
</restriction>
</simpleType>

<complexType name="destination">
<complexContent>
<extension base="impl:named-asset">
<sequence>
<!-- For defining the parent target relationship
							 Priority: parentContainerId >
 parentContainerPath
							 One is REQUIRED
							 When inside a Site, this field must refer to a SiteDestinationContainer.
							 When not in a Site, this field must refer to a Target
							  
-->
<element maxOccurs="1" minOccurs="0" name="parentContainerId" type="xsd:string"/>
<element maxOccurs="1" minOccurs="0" name="parentContainerPath" type="xsd:string"/>
<!-- For defining the transport relationship
							 Priority: transportId >
 transportPath
							 One is REQUIRED 
-->
<element maxOccurs="1" minOccurs="0" name="transportId" type="xsd:string"/>
<element maxOccurs="1" minOccurs="0" name="transportPath" type="xsd:string"/>
<!-- semicolon-delimited list of string group names for which this asset is available for use
							 NOT REQUIRED leave out to assign no groups 
-->
<element maxOccurs="1" minOccurs="0" name="applicableGroups" type="xsd:string"/>
<!-- The directory to place the published files in
							 NOT REQUIRED default: empty 
-->
<element maxOccurs="1" minOccurs="0" name="directory" type="xsd:string"/>
<!-- Whether or not this destination is enabled for publishing
							 NOT REQUIRED default: false 
-->
<element maxOccurs="1" minOccurs="0" name="enabled" type="xsd:boolean"/>
<!-- Whether or not this destination is checked by default when publish screen is loaded
							 NOT REQUIRED default: false 
-->
<element maxOccurs="1" minOccurs="0" name="checkedByDefault" type="xsd:boolean"/>
<!-- When publishing, whether or not to only publish ASCII characters.
							 Unicode characters will be escaped
							 NOT REQUIRED default: false 
-->
<element maxOccurs="1" minOccurs="0" name="publishASCII" type="xsd:boolean"/>
<!-- Whether or not to publish this set on a schedule
							 NOT REQUIRED default: false 
-->
<element maxOccurs="1" minOccurs="0" name="usesScheduledPublishing" type="xsd:boolean"/>
<!-- Not used, will be ignored if any value is set -->

<element maxOccurs="1" minOccurs="0" name="scheduledPublishDestinationMode" nillable="true" type="impl:scheduledDestinationMode"/>
<!-- Not used, will be ignored if any value is set -->

<element maxOccurs="1" minOccurs="0" name="scheduledPublishDestinations" type="impl:destination-list"/>
<!-- The base time this set will be published. For example if one wanted
							 this set to publish at 0100, 0500, 0900, 1300, 1700, 2100, I would enter
							 one of those times here and set the "publishInterval" to 4, and the
							 "publishIntervalUnits" to "hours"
							 NOT REQUIRED default: 00:00 (midnight), if cronExpression provided or usesScheduledPublishing is false, ignored 
-->
<element maxOccurs="1" minOccurs="0" name="timeToPublish" type="xsd:time"/>
<!-- Depending on which of the following 3 values is provided, that is the type of scheduled publish that is
						 	 going to be used.
						 	 One is REQUIRED if usesScheduledPublishing is true, else NOT REQUIRED and ignored
-->
<choice>
<!-- Every how many hours the asset should be published. Can be between 1 and 23 
-->
<element maxOccurs="1" minOccurs="0" name="publishIntervalHours" type="xsd:nonNegativeInteger"/>
<!-- Which days of the which the job should publish on - select all days to have a daily publish 
-->
<element maxOccurs="1" minOccurs="0" name="publishDaysOfWeek" type="impl:daysOfWeek"/>
<!-- Applicable only if publishInterval Units is "cron" - only a valid Cron Expression will be accepted 
-->
<element maxOccurs="1" minOccurs="0" name="cronExpression" type="xsd:string"/>
</choice>
<!-- semicolon-delimited list of string user names for which this asset is available for use
							 NOT REQUIRED leave out to assign no users 
-->
<element maxOccurs="1" minOccurs="0" name="sendReportToUsers" type="xsd:string"/>
<!-- semicolon-delimited list of string group names for which this asset is available for use
							 NOT REQUIRED leave out to assign no groups 
-->
<element maxOccurs="1" minOccurs="0" name="sendReportToGroups" type="xsd:string"/>
<!-- Whether or not to send a report when there are no errors
							 NOT REQUIRED default: false 
-->
<element maxOccurs="1" minOccurs="0" name="sendReportOnErrorOnly" type="xsd:boolean"/>
<!-- The base URL which should be used for linking to a given configuration during publishing, when this destination
							 is explicity chosen for a configuration on the content type. 
-->
<element maxOccurs="1" minOccurs="0" name="webUrl" nillable="true" type="xsd:string"/>
<!-- The site
							 Priority: siteId >
 siteName
							 One is REQUIRED 
-->
<element maxOccurs="1" minOccurs="0" name="siteId" nillable="true" type="xsd:string"/>
<element maxOccurs="1" minOccurs="0" name="siteName" nillable="true" type="xsd:string"/>
</sequence>
</extension>
</complexContent>
</complexType>

<complexType name="fileSystemTransport">
<complexContent>
<extension base="impl:containered-asset">
<sequence>
<!-- The directory to output the files to, for example "c:\inetfiles\wwwroot"
							 REQUIRED 
-->
<element maxOccurs="1" minOccurs="1" name="directory" type="xsd:string"/>
</sequence>
</extension>
</complexContent>
</complexType>

<complexType name="ftpTransport">
<complexContent>
<extension base="impl:containered-asset">
<sequence>
<!-- The host name or IP address of the remote server
							 REQUIRED 
-->
<element maxOccurs="1" minOccurs="1" name="hostName" type="xsd:string"/>
<!-- The port to use to connect to the server
							 REQUIRED 
-->
<element maxOccurs="1" minOccurs="1" name="port" type="xsd:positiveInteger"/>
<!-- The username to use when connecting to the server
							 REQUIRED 
-->
<element maxOccurs="1" minOccurs="1" name="username" type="xsd:string"/>
<!-- The password to use when connecting to the server
							 REQUIRED 
-->
<element maxOccurs="1" minOccurs="1" name="password" type="xsd:string"/>
<!-- The directory to place the files in
							 NOT REQUIRED default: empty 
-->
<element maxOccurs="1" minOccurs="0" name="directory" type="xsd:string"/>
<!-- Whether or not to connect using secure FTP (SSH protocol)
							 NOTE: When this is true, the "port" should probably be 22.
							 NOT REQUIRED default: false 
-->
<element maxOccurs="1" minOccurs="0" name="doSFTP" type="xsd:boolean"/>
<!-- Wehther or not to connect using PASV mode FTP
							 NOT REQUIRED default: false 
-->
<element maxOccurs="1" minOccurs="0" name="doPASV" type="xsd:boolean"/>
</sequence>
</extension>
</complexContent>
</complexType>

<complexType name="databaseTransport">
<complexContent>
<extension base="impl:containered-asset">
<sequence>
<!-- The site id
							 REQUIRED -->

<element maxOccurs="1" minOccurs="1" name="transportSiteId" type="xsd:nonNegativeInteger"/>
<!-- The name of the database server
							 REQUIRED -->

<element maxOccurs="1" minOccurs="1" name="serverName" type="xsd:string"/>
<!-- The port on which of the database server is working
							 REQUIRED 
-->
<element maxOccurs="1" minOccurs="1" name="serverPort" type="xsd:positiveInteger"/>
<!-- The name of the database itself
							 REQUIRED -->

<element maxOccurs="1" minOccurs="1" name="databaseName" type="xsd:string"/>
<!-- The username fto user when connecting to the server
							 REQUIRED 
-->
<element maxOccurs="1" minOccurs="1" name="username" type="xsd:string"/>
<!-- The password to use when connecting to the server
							 NOT REQUIRED default: empty string 
-->
<element maxOccurs="1" minOccurs="0" name="password" type="xsd:string"/>
</sequence>
</extension>
</complexContent>
</complexType>

<complexType name="transportContainer">
<complexContent>
<extension base="impl:containered-asset">
<sequence>
<!-- the array of children -->

<element maxOccurs="1" minOccurs="0" name="children" nillable="true" type="impl:container-children"/>
</sequence>
</extension>
</complexContent>
</complexType>

<complexType name="connectorContainer">
<complexContent>
<extension base="impl:containered-asset">
<sequence>
<!-- the array of children -->

<element maxOccurs="1" minOccurs="0" name="children" nillable="true" type="impl:container-children"/>
</sequence>
</extension>
</complexContent>
</complexType>

<complexType name="connector">
<complexContent>
<extension base="impl:containered-asset">
<sequence>
<!-- First authentication token for the external application the connector connects to (usually a username or email address)
							 NOT REQUIRED 
-->
<element maxOccurs="1" minOccurs="0" name="auth1" nillable="true" type="xsd:string"/>
<!-- Second authentication token for the external application the connector connects to (usually a password)
							 Write only - hidden when read
							 NOT REQUIRED 
-->
<element maxOccurs="1" minOccurs="0" name="auth2" nillable="true" type="xsd:string"/>
<!-- URL of the external application the connector connects to
							 NOT REQUIRED 
-->
<element maxOccurs="1" minOccurs="0" name="url" nillable="true" type="xsd:string"/>
<!-- Determins whether or not the connector has been verified
							 Read only - editing a connector always unverifies it
							 NOT REQUIRED 
-->
<element maxOccurs="1" minOccurs="0" name="verified" type="xsd:boolean"/>
<!-- The date this conenctor was verified
						     Read only - editing a connector always clears the verification date
							 NOT REQUIRED 
-->
<element maxOccurs="1" minOccurs="0" name="verifiedDate" nillable="true" type="xsd:dateTime"/>
<!-- A list of connector parameters
							 NOT REQUIRED 
-->
<element maxOccurs="1" minOccurs="0" name="connectorParameters" type="impl:connector-parameter-list"/>
<!-- A list of connector parameters
							 REQUIRED for TwitterConnector, FacebookConnector and WordPressConnector 
-->
<element maxOccurs="1" minOccurs="0" name="connectorContentTypeLinks" type="impl:connector-content-type-link-list"/>
</sequence>
</extension>
</complexContent>
</complexType>

<complexType name="statusUpdateConnector">
<complexContent>
<extension base="impl:connector">
<sequence>
<!-- The destination
							 Priority: destinationId >
 destinationPath
							 One is REQUIRED 
-->
<element maxOccurs="1" minOccurs="0" name="destinationId" type="xsd:string"/>
<element maxOccurs="1" minOccurs="0" name="destinationPath" type="xsd:string"/>
</sequence>
</extension>
</complexContent>
</complexType>

<complexType name="wordPressConnector">
<complexContent>
<extension base="impl:connector"/>
</complexContent>
</complexType>

<complexType name="twitterConnector">
<complexContent>
<extension base="impl:statusUpdateConnector"/>
</complexContent>
</complexType>

<complexType name="facebookConnector">
<complexContent>
<extension base="impl:statusUpdateConnector"/>
</complexContent>
</complexType>

<complexType name="googleAnalyticsConnector">
<complexContent>
<extension base="impl:connector"/>
</complexContent>
</complexType>

<complexType name="connector-parameter-list">
<sequence>
<element maxOccurs="unbounded" minOccurs="0" name="connectorParameter" nillable="true" type="impl:connector-parameter"/>
</sequence>
</complexType>

<complexType name="connector-parameter">
<sequence>
<!-- Name of the parameter
					 REQUIRED -->

<element maxOccurs="1" minOccurs="1" name="name" nillable="true" type="xsd:string"/>
<!-- Value of the parameter
					 REQUIRED -->

<element maxOccurs="1" minOccurs="1" name="value" nillable="true" type="xsd:string"/>
</sequence>
</complexType>

<complexType name="connector-content-type-link-list">
<sequence>
<element maxOccurs="unbounded" minOccurs="0" name="connectorContentTypeLink" nillable="true" type="impl:connector-content-type-link"/>
</sequence>
</complexType>

<complexType name="connector-content-type-link">
<sequence>
<!-- The content type
					 Priority: contentTypeId >
 contentTypePath
					 One is REQUIRED 
-->
<element maxOccurs="1" minOccurs="0" name="contentTypeId" type="xsd:string"/>
<element maxOccurs="1" minOccurs="0" name="contentTypePath" type="xsd:string"/>
<!-- The page configuration
					 Priority: pageConfigurationId >
 pageConfigurationName
					 NOT REQUIRED 
-->
<element maxOccurs="1" minOccurs="0" name="pageConfigurationId" type="xsd:string"/>
<element maxOccurs="1" minOccurs="0" name="pageConfigurationName" type="xsd:string"/>
<!-- A list of connector content type link params
					 NOT REQUIRED 
-->
<element maxOccurs="1" minOccurs="0" name="connectorContentTypeLinkParams" type="impl:connector-content-type-link-param-list"/>
</sequence>
</complexType>

<complexType name="connector-content-type-link-param-list">
<sequence>
<element maxOccurs="unbounded" minOccurs="0" name="connectorContentTypeLinkParam" nillable="true" type="impl:connector-content-type-link-param"/>
</sequence>
</complexType>

<complexType name="connector-content-type-link-param">
<sequence>
<!-- Name of the parameter
					 REQUIRED -->

<element maxOccurs="1" minOccurs="1" name="name" nillable="true" type="xsd:string"/>
<!-- Value of the parameter
					 REQUIRED -->

<element maxOccurs="1" minOccurs="1" name="value" nillable="true" type="xsd:string"/>
</sequence>
</complexType>

<complexType name="workflowDefinition">
<complexContent>
<extension base="impl:containered-asset">
<sequence>
<!-- semicolon-delimited list of string group names for which this asset is available for use
							 NOT REQUIRED leave out to assign no groups 
-->
<element maxOccurs="1" minOccurs="0" name="applicableGroups" type="xsd:string"/>
<!-- Whether or not this is a copy type workflow
							 NOT REQUIRED default: false 
-->
<element maxOccurs="1" minOccurs="0" name="copy" type="xsd:boolean"/>
<!-- Whether or not this is a create type workflow
							 NOT REQUIRED default: false 
-->
<element maxOccurs="1" minOccurs="0" name="create" type="xsd:boolean"/>
<!-- Whether or not this is a delete type workflow
							 NOT REQUIRED default: false 
-->
<element maxOccurs="1" minOccurs="0" name="delete" type="xsd:boolean"/>
<!-- Whether or not this is an edit type workflow
							 NOT REQUIRED default: false 
-->
<element maxOccurs="1" minOccurs="0" name="edit" type="xsd:boolean"/>
<!-- The naming behavior when an instance of this workflow is created
							 REQUIRED 
-->
<element maxOccurs="1" minOccurs="1" name="namingBehavior" type="impl:workflowNamingBehavior"/>
<!-- The actual workflow definition XML
							 REQUIRED 
-->
<element maxOccurs="1" minOccurs="1" name="xml" type="xsd:string"/>
</sequence>
</extension>
</complexContent>
</complexType>

<simpleType name="workflowNamingBehavior">
<restriction base="xsd:string">
<enumeration value="auto-name"/>
<enumeration value="name-of-definition"/>
<enumeration value="empty"/>
</restriction>
</simpleType>

<complexType name="workflowDefinitionContainer">
<complexContent>
<extension base="impl:containered-asset">
<sequence>
<!-- the array of children -->

<element maxOccurs="1" minOccurs="0" name="children" nillable="true" type="impl:container-children"/>
</sequence>
</extension>
</complexContent>
</complexType>

<complexType name="dublin-aware-asset">
<complexContent>
<extension base="impl:folder-contained-asset">
<sequence>
<!-- The individual wired metadata fields
							 NOT REQUIRED default: all empty 
-->
<element maxOccurs="1" minOccurs="0" name="metadata" type="impl:metadata"/>
<!-- For defining the metadata set relationship
							 Priority: metadataSetId >
 metadataSetPath
							 NOT REQUIRED 
-->
<element maxOccurs="1" minOccurs="0" name="metadataSetId" type="xsd:string"/>
<element maxOccurs="1" minOccurs="0" name="metadataSetPath" type="xsd:string"/>
</sequence>
</extension>
</complexContent>
</complexType>

<complexType name="metadata">
<sequence>
<element maxOccurs="1" minOccurs="0" name="author" type="xsd:string"/>
<element maxOccurs="1" minOccurs="0" name="displayName" type="xsd:string"/>
<element maxOccurs="1" minOccurs="0" name="endDate" nillable="true" type="xsd:dateTime"/>
<element maxOccurs="1" minOccurs="0" name="keywords" type="xsd:string"/>
<element maxOccurs="1" minOccurs="0" name="metaDescription" type="xsd:string"/>
<element maxOccurs="1" minOccurs="0" name="reviewDate" nillable="true" type="xsd:dateTime"/>
<element maxOccurs="1" minOccurs="0" name="startDate" nillable="true" type="xsd:dateTime"/>
<element maxOccurs="1" minOccurs="0" name="summary" type="xsd:string"/>
<element maxOccurs="1" minOccurs="0" name="teaser" type="xsd:string"/>
<element maxOccurs="1" minOccurs="0" name="title" type="xsd:string"/>
<element maxOccurs="1" minOccurs="0" name="dynamicFields" type="impl:dynamicMetadataFields"/>
</sequence>
</complexType>

<complexType name="dynamicMetadataFields">
<sequence>
<element maxOccurs="unbounded" minOccurs="0" name="dynamicField" type="impl:dynamicMetadataField"/>
</sequence>
</complexType>

<complexType name="dynamicMetadataField">
<sequence>
<element maxOccurs="1" minOccurs="1" name="name" nillable="false" type="xsd:string"/>
<element maxOccurs="1" minOccurs="0" name="fieldValues" nillable="true" type="impl:fieldValues"/>
</sequence>
</complexType>

<complexType name="fieldValues">
<sequence>
<element maxOccurs="unbounded" minOccurs="0" name="fieldValue" nillable="true" type="impl:fieldValue"/>
</sequence>
</complexType>

<complexType name="fieldValue">
<sequence>
<element maxOccurs="1" minOccurs="0" name="value" nillable="true" type="xsd:string"/>
</sequence>
</complexType>

<complexType name="expiring-asset">
<complexContent>
<extension base="impl:dublin-aware-asset">
<!-- For defining the expiration folder relationship
						 NOT REQUIRED default: none 
-->
<sequence>
<!-- When editing and selected asset is recycled, it is recommended to preserve this relationship by providing selected asset's id
					 		 in case if the selected asset gets restored from the recycle bin.
					 		 Priority: expirationFolderId >
 expirationFolderPath
					 		 NOT REQUIRED 
-->
<element maxOccurs="1" minOccurs="0" name="expirationFolderId" type="xsd:string"/>
<!-- Path works only for non-recycled assets -->

<element maxOccurs="1" minOccurs="0" name="expirationFolderPath" type="xsd:string"/>
<!-- NOT REQUIRED: For reading purposes only. Ignored when editing, copying etc. 
-->
<element maxOccurs="1" minOccurs="0" name="expirationFolderRecycled" type="xsd:boolean"/>
</sequence>
</extension>
</complexContent>
</complexType>

<complexType name="preference">
<sequence>
<element maxOccurs="1" minOccurs="1" name="name" type="xsd:string"/>
<element maxOccurs="1" minOccurs="1" name="value" type="xsd:string"/>
</sequence>
</complexType>

<complexType name="symlink">
<complexContent>
<extension base="impl:expiring-asset">
<sequence>
<!-- the fully qualified URL of this link -->

<element maxOccurs="1" minOccurs="0" name="linkURL" type="xsd:anyURI"/>
</sequence>
</extension>
</complexContent>
</complexType>


<complexType name="indexBlock">
<complexContent>
<extension base="impl:block">
<sequence>
<!-- The type of the index block. It takes "folder" as a default
					         NOT REQUIRED default: "folder" 
-->
<element maxOccurs="1" minOccurs="0" name="indexBlockType" type="impl:index-block-type"/>
<!-- The indexed folder relationship when indexBlockType is folder
							 Priority: indexedFolderId >
 indexedFolderPath)
							 NOT REQUIRED 
-->
<!-- When editing and selected asset is recycled, it is recommended to preserve this relationship by providing selected asset's id
					 		 in case if the selected asset gets restored from the recycle bin. 
-->
<element maxOccurs="1" minOccurs="0" name="indexedFolderId" type="xsd:string"/>
<!-- Path works only for non-recycled assets -->

<element maxOccurs="1" minOccurs="0" name="indexedFolderPath" type="xsd:string"/>
<!-- The indexed content type relationship when indexBlockType is content-type
							 Priority: indexedContentTypeId >
 indexedContentTypePath
							 One is REQUIRED when indexBlockType is content-type 
-->
<element maxOccurs="1" minOccurs="0" name="indexedContentTypeId" type="xsd:string"/>
<element maxOccurs="1" minOccurs="0" name="indexedContentTypePath" type="xsd:string"/>
<!-- NOT REQUIRED: For reading purposes only. Ignored when editing, copying etc. 
-->
<element maxOccurs="1" minOccurs="0" name="indexedFolderRecycled" type="xsd:boolean"/>
<!-- The maximum number of assets to render in XML form for this index block
							 REQUIRED 
-->
<element maxOccurs="1" minOccurs="1" name="maxRenderedAssets" type="xsd:nonNegativeInteger"/>
<!-- The folder depth to which the indexer will render assets in XML form
							 REQUIRED 
-->
<element maxOccurs="1" minOccurs="1" name="depthOfIndex" type="xsd:nonNegativeInteger"/>
<!-- The rendering behavior of the folder index block
						     NOT REQUIRED default: "render-normally" 
-->
<element maxOccurs="1" minOccurs="0" name="renderingBehavior" type="impl:index-block-rendering-behavior"/>
<!-- Whether or not to index page assets
							 NOT REQUIRED default: false 
-->
<element maxOccurs="1" minOccurs="0" name="indexPages" type="xsd:boolean"/>
<!-- Whether or not to index block assets
							 NOT REQUIRED default: false 
-->
<element maxOccurs="1" minOccurs="0" name="indexBlocks" type="xsd:boolean"/>
<!-- Whether or not to index (sym)link assets
							 NOT REQUIRED default: false 
-->
<element maxOccurs="1" minOccurs="0" name="indexLinks" type="xsd:boolean"/>
<!-- Whether or not to index file assets
							 NOT REQUIRED default: false 
-->
<element maxOccurs="1" minOccurs="0" name="indexFiles" type="xsd:boolean"/>
<!-- Whether or not to include path data
							 NOT REQUIRED default: false 
-->
<element maxOccurs="1" minOccurs="0" name="indexRegularContent" type="xsd:boolean"/>
<!-- Whether or not to include last modified date, last modified by, created date and created by
							 NOT REQUIRED default: false 
-->
<element maxOccurs="1" minOccurs="0" name="indexSystemMetadata" type="xsd:boolean"/>
<!-- Whether or not to include wired/dynamic metadata
							 NOT REQUIRED default: false 
-->
<element maxOccurs="1" minOccurs="0" name="indexUserMetadata" type="xsd:boolean"/>
<!-- Whether or not to include access rights information
							 NOT REQUIRED default: false 
-->
<element maxOccurs="1" minOccurs="0" name="indexAccessRights" type="xsd:boolean"/>
<!-- When this is "true", an element "user-information" will be added towards the
							 bottom of the rendered XML including information about the user's login, full
							 name and group memberships
							 NOT REQUIRED default: false 
-->
<element maxOccurs="1" minOccurs="0" name="indexUserInfo" type="xsd:boolean"/>
<!-- When this is "true", and this block is included in a page that is in workflow,
							 an element containing the page's workflow information will be included in the
							 rendered XML
							 NOT REQUIRED default: false 
-->
<element maxOccurs="1" minOccurs="0" name="indexWorkflowInfo" type="xsd:boolean"/>
<!-- When this is "true", the page which includes this index block will have its
							 information also included at the bottom in a "calling-page-data" element
							 NOT REQUIRED default: false 
-->
<element maxOccurs="1" minOccurs="0" name="appendCallingPageData" type="xsd:boolean"/>
<!-- How to sort the folder contents when rendering the XML content
							 NOT REQUIRED default: "folder-order" for folder index blocks and "alphabetical" for content type index blocks 
-->
<element maxOccurs="1" minOccurs="0" name="sortMethod" type="impl:index-block-sort-method"/>
<!-- In what order to sort the assets in the index block
						     NOT REQUIRED default: "ascending" 
-->
<element maxOccurs="1" minOccurs="0" name="sortOrder" type="impl:index-block-sort-order"/>
<!-- The Page XML rendering option
						     NOT REQUIRED default: "no-render" 
-->
<element maxOccurs="1" minOccurs="0" name="pageXML" type="impl:index-block-page-xml"/>
</sequence>
</extension>
</complexContent>
</complexType>

<simpleType name="index-block-sort-method">
<restriction base="xsd:string">
<enumeration value="folder-order"/>
<enumeration value="alphabetical"/>
<enumeration value="last-modified-date"/>
<enumeration value="created-date"/>
</restriction>
</simpleType>

<simpleType name="index-block-type">
<restriction base="xsd:string">
<enumeration value="folder"/>
<enumeration value="content-type"/>
</restriction>
</simpleType>

<simpleType name="index-block-sort-order">
<restriction base="xsd:string">
<enumeration value="ascending"/>
<enumeration value="descending"/>
</restriction>
</simpleType>

<simpleType name="index-block-page-xml">
<restriction base="xsd:string">
<enumeration value="no-render"/>
<enumeration value="render"/>
<enumeration value="render-current-page-only"/>
</restriction>
</simpleType>

<simpleType name="index-block-rendering-behavior">
<restriction base="xsd:string">
<enumeration value="render-normally"/>
<enumeration value="hierarchy"/>
<enumeration value="hierarchy-with-siblings"/>
<enumeration value="hierarchy-siblings-forward"/>
</restriction>
</simpleType>

<complexType name="feedBlock">
<complexContent>
<extension base="impl:block">
<sequence>
<element maxOccurs="1" minOccurs="1" name="feedURL" type="xsd:anyURI"/>
</sequence>
</extension>
</complexContent>
</complexType>

<complexType name="textBlock">
<complexContent>
<extension base="impl:block">
<sequence>
<element maxOccurs="1" minOccurs="1" name="text" type="xsd:string"/>
</sequence>
</extension>
</complexContent>
</complexType>

<complexType name="xmlBlock">
<complexContent>
<extension base="impl:block">
<sequence>
<!-- The XML content of the block
							 REQUIRED -->

<element maxOccurs="1" minOccurs="1" name="xml" type="xsd:string"/>
</sequence>
</extension>
</complexContent>
</complexType>

<complexType name="xhtmlDataDefinitionBlock">
<complexContent>
<extension base="impl:block">
<sequence>
<!-- A choice between structured data and xhtml content
							 Priority: xhtml >
 structuredData
							 One is REQUIRED 
-->
<element maxOccurs="1" minOccurs="0" name="structuredData" type="impl:structured-data"/>
<element maxOccurs="1" minOccurs="0" name="xhtml" type="xsd:string"/>
</sequence>
</extension>
</complexContent>
</complexType>

<complexType name="twitterFeedBlock">
<complexContent>
<extension base="impl:block">
<sequence>
<!-- The Account Name of the block
							Required for Tweets Only and Tweets and Mentions query types 
-->
<element maxOccurs="1" minOccurs="0" name="accountName" type="xsd:string"/>
<!-- The Search String for the block
							Required for Tweets Only and Tweets and Mentions search terms types
-->
<element maxOccurs="1" minOccurs="0" name="searchString" type="xsd:string"/>
<!-- The maximum number of tweets which can be shown
							REQUIRED
-->
<element maxOccurs="1" minOccurs="1" name="maxResults" type="xsd:nonNegativeInteger"/>
<!-- Should the twitter feed block use the default CSS style?
							REQUIRED 
-->
<element maxOccurs="1" minOccurs="1" name="useDefaultStyle" type="xsd:boolean"/>
<!--  Should the twitter feed block include the JQuery API 
-->
<element maxOccurs="1" minOccurs="1" name="excludeJQuery" type="xsd:boolean"/>
<!-- The type of twitter feed block
							 REQUIRED -->

<element maxOccurs="1" minOccurs="1" name="queryType" type="impl:twitter-query-type"/>
</sequence>
</extension>
</complexContent>
</complexType>

<simpleType name="twitter-query-type">
<restriction base="xsd:string">
<enumeration value="user-only"/>
<enumeration value="users-and-mentions"/>
<enumeration value="search-terms"/>
</restriction>
</simpleType>

<complexType name="publishable-asset">
<complexContent>
<extension base="impl:expiring-asset">
<sequence>
<!-- Whether or not this asset can be published
							 NOT REQUIRED default: true 
-->
<element maxOccurs="1" minOccurs="0" name="shouldBePublished" type="xsd:boolean"/>
<!-- Whether or not this asset can be indexed
							 NOT REQUIRED default: true 
-->
<element maxOccurs="1" minOccurs="0" name="shouldBeIndexed" type="xsd:boolean"/>
<!-- The last date this asset was published
							 NOT REQUIRED 
-->
<element maxOccurs="1" minOccurs="0" name="lastPublishedDate" nillable="true" type="xsd:dateTime"/>
<!-- Who last published this asset
							 NOT REQUIRED 
-->
<element maxOccurs="1" minOccurs="0" name="lastPublishedBy" nillable="true" type="xsd:string"/>
</sequence>
</extension>
</complexContent>
</complexType>

<complexType name="page">
<complexContent>
<extension base="impl:publishable-asset">
<sequence>
<element maxOccurs="1" minOccurs="0" name="configurationSetId" type="xsd:string"/>
<element maxOccurs="1" minOccurs="0" name="configurationSetPath" type="xsd:string"/>
<element maxOccurs="1" minOccurs="0" name="contentTypeId" type="xsd:string"/>
<element maxOccurs="1" minOccurs="0" name="contentTypePath" type="xsd:string"/>
<element maxOccurs="1" minOccurs="0" name="structuredData" type="impl:structured-data"/>
<element maxOccurs="1" minOccurs="0" name="xhtml" type="xsd:string"/>
<element maxOccurs="1" minOccurs="0" name="pageConfigurations" nillable="false" type="impl:page-configurations"/>
<element maxOccurs="1" minOccurs="0" name="maintainAbsoluteLinks" type="xsd:boolean"/>
</sequence>
</extension>
</complexContent>
</complexType>

<complexType name="structured-data">
<sequence>
<element maxOccurs="1" minOccurs="0" name="definitionId" type="xsd:string"/>
<element maxOccurs="1" minOccurs="0" name="definitionPath" type="xsd:string"/>
<element maxOccurs="1" minOccurs="0" name="structuredDataNodes" type="impl:structured-data-nodes"/>
</sequence>
</complexType>

<complexType name="structured-data-nodes">
<sequence>
<element maxOccurs="unbounded" minOccurs="0" name="structuredDataNode" type="impl:structured-data-node"/>
</sequence>
</complexType>

<complexType name="structured-data-node">
<sequence>
<element maxOccurs="1" minOccurs="1" name="type" type="impl:structured-data-type"/>
<element maxOccurs="1" minOccurs="1" name="identifier" type="xsd:string"/>
<element maxOccurs="1" minOccurs="0" name="structuredDataNodes" type="impl:structured-data-nodes"/>
<element maxOccurs="1" minOccurs="0" name="text" type="xsd:string"/>
<element maxOccurs="1" minOccurs="0" name="assetType" type="impl:structured-data-asset-type"/>
<element maxOccurs="1" minOccurs="0" name="blockId" type="xsd:string"/>
<element maxOccurs="1" minOccurs="0" name="blockPath" type="xsd:string"/>
<element maxOccurs="1" minOccurs="0" name="fileId" type="xsd:string"/>
<element maxOccurs="1" minOccurs="0" name="filePath" type="xsd:string"/>
<element maxOccurs="1" minOccurs="0" name="pageId" type="xsd:string"/>
<element maxOccurs="1" minOccurs="0" name="pagePath" type="xsd:string"/>
<element maxOccurs="1" minOccurs="0" name="symlinkId" type="xsd:string"/>
<element maxOccurs="1" minOccurs="0" name="symlinkPath" type="xsd:string"/>
<element maxOccurs="1" minOccurs="0" name="recycled" type="xsd:boolean"/>
</sequence>
</complexType>

<simpleType name="structured-data-type">
<restriction base="xsd:string">
<enumeration value="text"/>
<enumeration value="asset"/>
<enumeration value="group"/>
</restriction>
</simpleType>

<simpleType name="structured-data-asset-type">
<restriction base="xsd:string">
<enumeration value="block"/>
<enumeration value="file"/>
<enumeration value="page"/>
<enumeration value="symlink"/>
<enumeration value="page,file,symlink"/>
</restriction>
</simpleType>

<complexType name="folder">
<complexContent>
<extension base="impl:publishable-asset">
<sequence>
<element maxOccurs="1" minOccurs="0" name="children" nillable="true" type="impl:container-children"/>
</sequence>
</extension>
</complexContent>
</complexType>

<complexType name="entity-type">
<sequence>
<element maxOccurs="1" minOccurs="1" name="name" type="impl:entityTypeString"/>
</sequence>
</complexType>

<complexType name="container-children">
<sequence>
<element maxOccurs="unbounded" minOccurs="0" name="child" type="impl:identifier"/>
</sequence>
</complexType>

<complexType name="file">
<complexContent>
<extension base="impl:publishable-asset">
<sequence>
<element maxOccurs="1" minOccurs="0" name="text" type="xsd:string"/>
<element maxOccurs="1" minOccurs="0" name="data" type="xsd:base64Binary"/>
<element maxOccurs="1" minOccurs="0" name="rewriteLinks" type="xsd:boolean"/>
<element maxOccurs="1" minOccurs="0" name="maintainAbsoluteLinks" type="xsd:boolean"/>
</sequence>
</extension>
</complexContent>
</complexType>

<complexType name="editorConfiguration">
<complexContent>
<extension base="impl:named-asset">
<sequence>
<!-- The Site in which the asset is located
								 NOT REQUIRED when referencing the System Default Editor Configuration (id=DEFAULT, name=Default)
   							 One is REQUIRED for all other Editor Configurations 
-->
<element maxOccurs="1" minOccurs="0" name="siteId" nillable="true" type="xsd:string"/>
<element maxOccurs="1" minOccurs="0" name="siteName" nillable="true" type="xsd:string"/>
<!-- File containing css for the WYSIWYG editor
                 Priority: cssFileId >
 cssFilePath
                 NOT REQUIRED 
-->
<!-- When editing and selected asset is recycled, it is recommended to preserve this relationship by providing selected asset's id
                in case if the selected asset gets restored from the recycle bin. 
-->
<element maxOccurs="1" minOccurs="0" name="cssFileId" type="xsd:string"/>
<!-- Path works only for non-recycled assets -->

<element maxOccurs="1" minOccurs="0" name="cssFilePath" type="xsd:string"/>
<!-- NOT REQUIRED: For reading purposes only. Ignored when editing, copying etc. 
-->
<element maxOccurs="1" minOccurs="0" name="cssFileRecycled" type="xsd:boolean"/>
<!-- JSON String for the configuration -->

<element maxOccurs="1" minOccurs="1" name="configuration" nillable="false" type="xsd:string"/>
</sequence>
</extension>
</complexContent>
</complexType>

<complexType name="asset">
<sequence>
<element maxOccurs="1" minOccurs="0" name="workflowConfiguration" type="impl:workflow-configuration"/>
<choice>
<element maxOccurs="1" minOccurs="1" name="feedBlock" nillable="true" type="impl:feedBlock"/>
<element maxOccurs="1" minOccurs="1" name="indexBlock" nillable="true" type="impl:indexBlock"/>
<element maxOccurs="1" minOccurs="1" name="textBlock" nillable="true" type="impl:textBlock"/>
<element maxOccurs="1" minOccurs="1" name="xhtmlDataDefinitionBlock" nillable="true" type="impl:xhtmlDataDefinitionBlock"/>
<element maxOccurs="1" minOccurs="1" name="xmlBlock" nillable="true" type="impl:xmlBlock"/>
<element maxOccurs="1" minOccurs="1" name="file" nillable="true" type="impl:file"/>
<element maxOccurs="1" minOccurs="1" name="folder" nillable="true" type="impl:folder"/>
<element maxOccurs="1" minOccurs="1" name="page" nillable="true" type="impl:page"/>
<element maxOccurs="1" minOccurs="1" name="reference" nillable="true" type="impl:reference"/>
<element maxOccurs="1" minOccurs="1" name="xsltFormat" nillable="true" type="impl:xsltFormat"/>
<element maxOccurs="1" minOccurs="1" name="scriptFormat" nillable="true" type="impl:scriptFormat"/>
<element maxOccurs="1" minOccurs="1" name="symlink" nillable="true" type="impl:symlink"/>
<element maxOccurs="1" minOccurs="1" name="template" nillable="true" type="impl:template"/>
<element maxOccurs="1" minOccurs="1" name="user" nillable="true" type="impl:user"/>
<element maxOccurs="1" minOccurs="1" name="group" nillable="true" type="impl:group"/>
<element maxOccurs="1" minOccurs="1" name="role" nillable="true" type="impl:role"/>
<element maxOccurs="1" minOccurs="1" name="assetFactory" nillable="true" type="impl:assetFactory"/>
<element maxOccurs="1" minOccurs="1" name="assetFactoryContainer" nillable="true" type="impl:assetFactoryContainer"/>
<element maxOccurs="1" minOccurs="1" name="contentType" nillable="true" type="impl:contentType"/>
<element maxOccurs="1" minOccurs="1" name="contentTypeContainer" nillable="true" type="impl:contentTypeContainer"/>
<element maxOccurs="1" minOccurs="1" name="connectorContainer" nillable="true" type="impl:connectorContainer"/>
<element maxOccurs="1" minOccurs="1" name="twitterConnector" nillable="true" type="impl:twitterConnector"/>
<element maxOccurs="1" minOccurs="1" name="facebookConnector" nillable="true" type="impl:facebookConnector"/>
<element maxOccurs="1" minOccurs="1" name="wordPressConnector" nillable="true" type="impl:wordPressConnector"/>
<element maxOccurs="1" minOccurs="1" name="googleAnalyticsConnector" nillable="true" type="impl:googleAnalyticsConnector"/>
<element maxOccurs="1" minOccurs="1" name="pageConfigurationSet" nillable="true" type="impl:pageConfigurationSet"/>
<element maxOccurs="1" minOccurs="1" name="pageConfigurationSetContainer" nillable="true" type="impl:pageConfigurationSetContainer"/>
<element maxOccurs="1" minOccurs="1" name="dataDefinition" nillable="true" type="impl:dataDefinition"/>
<element maxOccurs="1" minOccurs="1" name="dataDefinitionContainer" nillable="true" type="impl:dataDefinitionContainer"/>
<element maxOccurs="1" minOccurs="1" name="metadataSet" nillable="true" type="impl:metadataSet"/>
<element maxOccurs="1" minOccurs="1" name="metadataSetContainer" nillable="true" type="impl:metadataSetContainer"/>
<element maxOccurs="1" minOccurs="1" name="publishSet" nillable="true" type="impl:publishSet"/>
<element maxOccurs="1" minOccurs="1" name="publishSetContainer" nillable="true" type="impl:publishSetContainer"/>
<element maxOccurs="1" minOccurs="1" name="target" nillable="true" type="impl:target"/>
<element maxOccurs="1" minOccurs="1" name="siteDestinationContainer" nillable="true" type="impl:siteDestinationContainer"/>
<element maxOccurs="1" minOccurs="1" name="destination" nillable="true" type="impl:destination"/>
<element maxOccurs="1" minOccurs="1" name="fileSystemTransport" nillable="true" type="impl:fileSystemTransport"/>
<element maxOccurs="1" minOccurs="1" name="ftpTransport" nillable="true" type="impl:ftpTransport"/>
<element maxOccurs="1" minOccurs="1" name="databaseTransport" nillable="true" type="impl:databaseTransport"/>
<element maxOccurs="1" minOccurs="1" name="transportContainer" nillable="true" type="impl:transportContainer"/>
<element maxOccurs="1" minOccurs="1" name="workflowDefinition" nillable="true" type="impl:workflowDefinition"/>
<element maxOccurs="1" minOccurs="1" name="workflowDefinitionContainer" nillable="true" type="impl:workflowDefinitionContainer"/>
<element maxOccurs="1" minOccurs="1" name="twitterFeedBlock" nillable="true" type="impl:twitterFeedBlock"/>
<element maxOccurs="1" minOccurs="1" name="site" nillable="true" type="impl:site"/>
<element maxOccurs="1" minOccurs="1" name="editorConfiguration" nillable="true" type="impl:editorConfiguration"/>
</choice>
</sequence>
</complexType>

<complexType name="workflow-configuration">
<sequence>
<element maxOccurs="1" minOccurs="1" name="workflowName" type="xsd:string"/>
<element maxOccurs="1" minOccurs="0" name="workflowDefinitionId" type="xsd:string"/>
<element maxOccurs="1" minOccurs="0" name="workflowDefinitionPath" type="xsd:string"/>
<element maxOccurs="1" minOccurs="1" name="workflowComments" type="xsd:string"/>
<element maxOccurs="1" minOccurs="0" name="workflowStepConfigurations" type="impl:workflow-step-configurations"/>
<element maxOccurs="1" minOccurs="0" name="endDate" type="xsd:dateTime"/>
</sequence>
</complexType>

<complexType name="workflow-step-configurations">
<sequence>
<element maxOccurs="unbounded" name="workflowStepConfiguration" type="impl:workflow-step-configuration"/>
</sequence>
</complexType>

<complexType name="workflow-step-configuration">
<sequence>
<!-- the step's unique text identifier/name
					 REQUIRED 
-->
<element maxOccurs="1" minOccurs="1" name="stepIdentifier" type="xsd:string"/>
<!-- The step's assignment (user or group name)
					 REQUIRED 
-->
<element maxOccurs="1" minOccurs="1" name="stepAssignment" type="xsd:string"/>
</sequence>
</complexType>


</schema>
</wsdl:types>

</wsdl:definitions>
